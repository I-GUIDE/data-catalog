// generated using https://www.graphql-code-generator.com/
export type ObjectId = string;
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    ObjectId: ObjectId;
};

export type DeleteManyPayload = {
    __typename?: 'DeleteManyPayload';
    deletedCount: Scalars['Int'];
};

export type Geojson_Checksum_RelationQueryInput = {
    ori_coverage_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOri_CoverageQueryInput>>>;
    contributors_exists?: InputMaybe<Scalars['Boolean']>;
    _cell_information?: InputMaybe<Geojson_Checksum_Relation_Cell_InformationQueryInput>;
    published_gte?: InputMaybe<Scalars['String']>;
    abstract_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    title_gt?: InputMaybe<Scalars['String']>;
    type_lte?: InputMaybe<Scalars['String']>;
    created_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    originalcoverages?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOriginalcoverageQueryInput>>>;
    type_ne?: InputMaybe<Scalars['String']>;
    modified?: InputMaybe<Scalars['String']>;
    title_gte?: InputMaybe<Scalars['String']>;
    published_gt?: InputMaybe<Scalars['String']>;
    id_lte?: InputMaybe<Scalars['String']>;
    subjects_exists?: InputMaybe<Scalars['Boolean']>;
    abstract_lt?: InputMaybe<Scalars['String']>;
    id_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    created_lte?: InputMaybe<Scalars['String']>;
    id_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldinformations_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFieldinformationQueryInput>>>;
    _band_information?: InputMaybe<Geojson_Checksum_Relation_Band_InformationQueryInput>;
    created?: InputMaybe<Scalars['String']>;
    _model_output?: InputMaybe<Geojson_Checksum_Relation_Model_OutputQueryInput>;
    language_exists?: InputMaybe<Scalars['Boolean']>;
    period_coverage_exists?: InputMaybe<Scalars['Boolean']>;
    id_lt?: InputMaybe<Scalars['String']>;
    title_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ori_coverage_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOri_CoverageQueryInput>>>;
    files?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFileQueryInput>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationQueryInput>>;
    modified_lte?: InputMaybe<Scalars['String']>;
    title?: InputMaybe<Scalars['String']>;
    published_lte?: InputMaybe<Scalars['String']>;
    spatial_coverage?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageQueryInput>;
    language_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modified_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    funding_agencies_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFunding_AgencyQueryInput>>>;
    creators_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationCreatorQueryInput>>>;
    language_lte?: InputMaybe<Scalars['String']>;
    _id_in?: InputMaybe<Array<InputMaybe<Scalars['ObjectId']>>>;
    files_exists?: InputMaybe<Scalars['Boolean']>;
    originalcoverages_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOriginalcoverageQueryInput>>>;
    type_exists?: InputMaybe<Scalars['Boolean']>;
    contributors_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationContributorQueryInput>>>;
    _id_gte?: InputMaybe<Scalars['ObjectId']>;
    funding_agencies_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFunding_AgencyQueryInput>>>;
    _band_information_exists?: InputMaybe<Scalars['Boolean']>;
    subjects_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFieldinformationQueryInput>>>;
    type?: InputMaybe<Scalars['String']>;
    identifiers_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationIdentifierQueryInput>>>;
    subjects?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    created_exists?: InputMaybe<Scalars['Boolean']>;
    language_lt?: InputMaybe<Scalars['String']>;
    abstract_gt?: InputMaybe<Scalars['String']>;
    created_lt?: InputMaybe<Scalars['String']>;
    variables_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationVariableQueryInput>>>;
    creators?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationCreatorQueryInput>>>;
    fieldinformations_exists?: InputMaybe<Scalars['Boolean']>;
    publisher?: InputMaybe<Geojson_Checksum_RelationPublisherQueryInput>;
    variables_exists?: InputMaybe<Scalars['Boolean']>;
    identifiers_exists?: InputMaybe<Scalars['Boolean']>;
    id_gte?: InputMaybe<Scalars['String']>;
    created_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    additional_metadata?: InputMaybe<Geojson_Checksum_RelationAdditional_MetadatumQueryInput>;
    ori_coverage_exists?: InputMaybe<Scalars['Boolean']>;
    id_ne?: InputMaybe<Scalars['String']>;
    relations_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationRelationQueryInput>>>;
    created_ne?: InputMaybe<Scalars['String']>;
    geometryinformations_exists?: InputMaybe<Scalars['Boolean']>;
    additional_metadata_exists?: InputMaybe<Scalars['Boolean']>;
    _executed_by?: InputMaybe<Geojson_Checksum_Relation_Executed_ByQueryInput>;
    abstract_exists?: InputMaybe<Scalars['Boolean']>;
    relations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationRelationQueryInput>>>;
    rights_exists?: InputMaybe<Scalars['Boolean']>;
    identifiers?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationIdentifierQueryInput>>>;
    type_lt?: InputMaybe<Scalars['String']>;
    type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    abstract_gte?: InputMaybe<Scalars['String']>;
    modified_exists?: InputMaybe<Scalars['Boolean']>;
    contributors_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationContributorQueryInput>>>;
    variables?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationVariableQueryInput>>>;
    published_ne?: InputMaybe<Scalars['String']>;
    contributors?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationContributorQueryInput>>>;
    rights?: InputMaybe<Geojson_Checksum_RelationRightQueryInput>;
    published_lt?: InputMaybe<Scalars['String']>;
    creators_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationCreatorQueryInput>>>;
    created_gte?: InputMaybe<Scalars['String']>;
    title_lte?: InputMaybe<Scalars['String']>;
    created_gt?: InputMaybe<Scalars['String']>;
    language_ne?: InputMaybe<Scalars['String']>;
    _ori_coverage_exists?: InputMaybe<Scalars['Boolean']>;
    originalcoverages_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOriginalcoverageQueryInput>>>;
    modified_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    language_gte?: InputMaybe<Scalars['String']>;
    _model_output_exists?: InputMaybe<Scalars['Boolean']>;
    abstract_ne?: InputMaybe<Scalars['String']>;
    title_exists?: InputMaybe<Scalars['Boolean']>;
    files_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFileQueryInput>>>;
    _mpmetadata_exists?: InputMaybe<Scalars['Boolean']>;
    _cell_information_exists?: InputMaybe<Scalars['Boolean']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationQueryInput>>;
    _id_exists?: InputMaybe<Scalars['Boolean']>;
    identifiers_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationIdentifierQueryInput>>>;
    published_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    publisher_exists?: InputMaybe<Scalars['Boolean']>;
    variables_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationVariableQueryInput>>>;
    funding_agencies_exists?: InputMaybe<Scalars['Boolean']>;
    _executed_by_exists?: InputMaybe<Scalars['Boolean']>;
    originalcoverages_exists?: InputMaybe<Scalars['Boolean']>;
    type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _mpmetadata?: InputMaybe<Geojson_Checksum_Relation_MpmetadatumQueryInput>;
    _id_gt?: InputMaybe<Scalars['ObjectId']>;
    type_gt?: InputMaybe<Scalars['String']>;
    published_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _id_lt?: InputMaybe<Scalars['ObjectId']>;
    relations_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationRelationQueryInput>>>;
    title_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    funding_agencies?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFunding_AgencyQueryInput>>>;
    modified_gt?: InputMaybe<Scalars['String']>;
    subjects_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _ori_coverage?: InputMaybe<Geojson_Checksum_Relation_Ori_CoverageQueryInput>;
    _id_lte?: InputMaybe<Scalars['ObjectId']>;
    type_gte?: InputMaybe<Scalars['String']>;
    published?: InputMaybe<Scalars['String']>;
    abstract?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    language_gt?: InputMaybe<Scalars['String']>;
    geometryinformations_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationGeometryinformationQueryInput>>>;
    geometryinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationGeometryinformationQueryInput>>>;
    published_exists?: InputMaybe<Scalars['Boolean']>;
    geometryinformations_nin?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationGeometryinformationQueryInput>>>;
    spatial_coverage_exists?: InputMaybe<Scalars['Boolean']>;
    ori_coverage?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOri_CoverageQueryInput>>>;
    language?: InputMaybe<Scalars['String']>;
    abstract_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _id?: InputMaybe<Scalars['ObjectId']>;
    abstract_lte?: InputMaybe<Scalars['String']>;
    title_lt?: InputMaybe<Scalars['String']>;
    language_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    id_exists?: InputMaybe<Scalars['Boolean']>;
    _id_ne?: InputMaybe<Scalars['ObjectId']>;
    modified_lt?: InputMaybe<Scalars['String']>;
    fieldinformations_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFieldinformationQueryInput>>>;
    modified_ne?: InputMaybe<Scalars['String']>;
    creators_exists?: InputMaybe<Scalars['Boolean']>;
    title_ne?: InputMaybe<Scalars['String']>;
    relations_exists?: InputMaybe<Scalars['Boolean']>;
    period_coverage?: InputMaybe<Geojson_Checksum_RelationPeriod_CoverageQueryInput>;
    files_in?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFileQueryInput>>>;
    id_gt?: InputMaybe<Scalars['String']>;
    _id_nin?: InputMaybe<Array<InputMaybe<Scalars['ObjectId']>>>;
    modified_gte?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Ori_CoverageUpdateInput = {
    _value?: InputMaybe<Scalars['String']>;
    _value_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationCreatorInsertInput = {
    homepage?: InputMaybe<Scalars['String']>;
    phone?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    identifiers?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    organization?: InputMaybe<Scalars['String']>;
    address?: InputMaybe<Scalars['String']>;
    creatorOrder?: InputMaybe<Scalars['String']>;
    email?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Cell_InformationUpdateInput = {
    cellSizeYValue_unset?: InputMaybe<Scalars['Boolean']>;
    cellSizeXValue?: InputMaybe<Scalars['String']>;
    cellSizeYValue?: InputMaybe<Scalars['String']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
    rows_unset?: InputMaybe<Scalars['Boolean']>;
    cellDataType_unset?: InputMaybe<Scalars['Boolean']>;
    cellSizeXValue_unset?: InputMaybe<Scalars['Boolean']>;
    columns?: InputMaybe<Scalars['String']>;
    rows?: InputMaybe<Scalars['String']>;
    cellDataType?: InputMaybe<Scalars['String']>;
    columns_unset?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFieldinformationInsertInput = {
    fieldName?: InputMaybe<Scalars['String']>;
    fieldPrecision?: InputMaybe<Scalars['String']>;
    fieldType?: InputMaybe<Scalars['String']>;
    fieldTypeCode?: InputMaybe<Scalars['String']>;
    fieldWidth?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOriginalcoverageUpdateInput = {
    projection_name_unset?: InputMaybe<Scalars['Boolean']>;
    projection_name?: InputMaybe<Scalars['String']>;
    eastlimit_unset?: InputMaybe<Scalars['Boolean']>;
    southlimit?: InputMaybe<Scalars['String']>;
    southlimit_unset?: InputMaybe<Scalars['Boolean']>;
    projection_string?: InputMaybe<Scalars['String']>;
    westlimit_unset?: InputMaybe<Scalars['Boolean']>;
    northlimit?: InputMaybe<Scalars['String']>;
    datum?: InputMaybe<Scalars['String']>;
    unit?: InputMaybe<Scalars['String']>;
    westlimit?: InputMaybe<Scalars['String']>;
    projection_string_unset?: InputMaybe<Scalars['Boolean']>;
    unit_unset?: InputMaybe<Scalars['Boolean']>;
    northlimit_unset?: InputMaybe<Scalars['Boolean']>;
    datum_unset?: InputMaybe<Scalars['Boolean']>;
    eastlimit?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_MpmetadatumQueryInput = {
    modelReleaseNotes_ne?: InputMaybe<Scalars['String']>;
    modelWebsite_ne?: InputMaybe<Scalars['String']>;
    modelSoftware_ne?: InputMaybe<Scalars['String']>;
    modelEngine?: InputMaybe<Scalars['String']>;
    modelEngine_exists?: InputMaybe<Scalars['Boolean']>;
    modelVersion_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelProgramLanguage_lte?: InputMaybe<Scalars['String']>;
    modelProgramLanguage?: InputMaybe<Scalars['String']>;
    modelOperatingSystem_gt?: InputMaybe<Scalars['String']>;
    modelOperatingSystem_exists?: InputMaybe<Scalars['Boolean']>;
    modelReleaseDate_ne?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_lt?: InputMaybe<Scalars['String']>;
    modelReleaseDate?: InputMaybe<Scalars['String']>;
    modelReleaseDate_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelProgramLanguage_gt?: InputMaybe<Scalars['String']>;
    modelWebsite_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelReleaseNotes_gt?: InputMaybe<Scalars['String']>;
    modelVersion?: InputMaybe<Scalars['String']>;
    modelProgramLanguage_gte?: InputMaybe<Scalars['String']>;
    modelOperatingSystem?: InputMaybe<Scalars['String']>;
    modelReleaseDate_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelOperatingSystem_lt?: InputMaybe<Scalars['String']>;
    modelProgramLanguage_lt?: InputMaybe<Scalars['String']>;
    modelDocumentation_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelProgramLanguage_exists?: InputMaybe<Scalars['Boolean']>;
    modelWebsite_lt?: InputMaybe<Scalars['String']>;
    modelReleaseNotes?: InputMaybe<Scalars['String']>;
    modelOperatingSystem_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelEngine_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_MpmetadatumQueryInput>>;
    modelCodeRepository_ne?: InputMaybe<Scalars['String']>;
    modelVersion_lte?: InputMaybe<Scalars['String']>;
    modelProgramLanguage_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelReleaseDate_lt?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_gte?: InputMaybe<Scalars['String']>;
    modelEngine_gte?: InputMaybe<Scalars['String']>;
    modelReleaseDate_exists?: InputMaybe<Scalars['Boolean']>;
    modelSoftware_gte?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelProgramLanguage_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelCodeRepository_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelOperatingSystem_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelDocumentation_gte?: InputMaybe<Scalars['String']>;
    modelEngine_ne?: InputMaybe<Scalars['String']>;
    modelReleaseDate_gt?: InputMaybe<Scalars['String']>;
    modelReleaseDate_gte?: InputMaybe<Scalars['String']>;
    modelVersion_exists?: InputMaybe<Scalars['Boolean']>;
    modelVersion_ne?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_exists?: InputMaybe<Scalars['Boolean']>;
    modelOperatingSystem_gte?: InputMaybe<Scalars['String']>;
    modelDocumentation_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelWebsite?: InputMaybe<Scalars['String']>;
    modelCodeRepository?: InputMaybe<Scalars['String']>;
    modelSoftware_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelDocumentation_lt?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelOperatingSystem_lte?: InputMaybe<Scalars['String']>;
    modelEngine_lte?: InputMaybe<Scalars['String']>;
    modelProgramLanguage_ne?: InputMaybe<Scalars['String']>;
    modelDocumentation?: InputMaybe<Scalars['String']>;
    modelSoftware_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelDocumentation_gt?: InputMaybe<Scalars['String']>;
    modelCodeRepository_lt?: InputMaybe<Scalars['String']>;
    modelCodeRepository_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelCodeRepository_gt?: InputMaybe<Scalars['String']>;
    modelVersion_gt?: InputMaybe<Scalars['String']>;
    modelWebsite_exists?: InputMaybe<Scalars['Boolean']>;
    modelWebsite_gte?: InputMaybe<Scalars['String']>;
    modelVersion_lt?: InputMaybe<Scalars['String']>;
    modelEngine_lt?: InputMaybe<Scalars['String']>;
    modelCodeRepository_exists?: InputMaybe<Scalars['Boolean']>;
    modelSoftware_gt?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_lte?: InputMaybe<Scalars['String']>;
    modelVersion_gte?: InputMaybe<Scalars['String']>;
    modelVersion_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelReleaseDate_lte?: InputMaybe<Scalars['String']>;
    modelSoftware_lte?: InputMaybe<Scalars['String']>;
    modelWebsite_lte?: InputMaybe<Scalars['String']>;
    modelSoftware_exists?: InputMaybe<Scalars['Boolean']>;
    modelSoftware_lt?: InputMaybe<Scalars['String']>;
    modelEngine_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    modelCodeRepository_lte?: InputMaybe<Scalars['String']>;
    modelDocumentation_lte?: InputMaybe<Scalars['String']>;
    modelDocumentation_ne?: InputMaybe<Scalars['String']>;
    modelDocumentation_exists?: InputMaybe<Scalars['Boolean']>;
    modelWebsite_gt?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_MpmetadatumQueryInput>>;
    modelOperatingSystem_ne?: InputMaybe<Scalars['String']>;
    modelCodeRepository_gte?: InputMaybe<Scalars['String']>;
    modelSoftware?: InputMaybe<Scalars['String']>;
    modelEngine_gt?: InputMaybe<Scalars['String']>;
    modelWebsite_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Geojson_Checksum_RelationPeriod_CoverageQueryInput = {
    end_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    start_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    end_ne?: InputMaybe<Scalars['String']>;
    end_lt?: InputMaybe<Scalars['String']>;
    start_ne?: InputMaybe<Scalars['String']>;
    start_gte?: InputMaybe<Scalars['String']>;
    end_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    end_exists?: InputMaybe<Scalars['Boolean']>;
    start_exists?: InputMaybe<Scalars['Boolean']>;
    start_lt?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationPeriod_CoverageQueryInput>>;
    start_lte?: InputMaybe<Scalars['String']>;
    end?: InputMaybe<Scalars['String']>;
    start_gt?: InputMaybe<Scalars['String']>;
    end_gt?: InputMaybe<Scalars['String']>;
    end_gte?: InputMaybe<Scalars['String']>;
    end_lte?: InputMaybe<Scalars['String']>;
    start_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationPeriod_CoverageQueryInput>>;
    start?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPublisherInsertInput = {
    publisherName?: InputMaybe<Scalars['String']>;
    publisherURL?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationVariable = {
    __typename?: 'Geojson_checksum_relationVariable';
    descriptive_name?: Maybe<Scalars['String']>;
    name?: Maybe<Scalars['String']>;
    shape?: Maybe<Scalars['String']>;
    type?: Maybe<Scalars['String']>;
    unit?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Executed_By = {
    __typename?: 'Geojson_checksum_relation_executed_by';
    model_name?: Maybe<Scalars['String']>;
    model_program_fk?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPublisherUpdateInput = {
    publisherURL_unset?: InputMaybe<Scalars['Boolean']>;
    publisherName?: InputMaybe<Scalars['String']>;
    publisherName_unset?: InputMaybe<Scalars['Boolean']>;
    publisherURL?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationCreatorUpdateInput = {
    address_unset?: InputMaybe<Scalars['Boolean']>;
    creatorOrder?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    email_unset?: InputMaybe<Scalars['Boolean']>;
    homepage?: InputMaybe<Scalars['String']>;
    homepage_unset?: InputMaybe<Scalars['Boolean']>;
    hydroshare_user_id_unset?: InputMaybe<Scalars['Boolean']>;
    organization?: InputMaybe<Scalars['String']>;
    phone?: InputMaybe<Scalars['String']>;
    identifiers_unset?: InputMaybe<Scalars['Boolean']>;
    creatorOrder_unset?: InputMaybe<Scalars['Boolean']>;
    address?: InputMaybe<Scalars['String']>;
    organization_unset?: InputMaybe<Scalars['Boolean']>;
    identifiers?: InputMaybe<Scalars['String']>;
    phone_unset?: InputMaybe<Scalars['Boolean']>;
    email?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_Relation_Ori_Coverage = {
    __typename?: 'Geojson_checksum_relation_ori_coverage';
    _value?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Executed_ByUpdateInput = {
    model_program_fk?: InputMaybe<Scalars['String']>;
    model_program_fk_unset?: InputMaybe<Scalars['Boolean']>;
    model_name?: InputMaybe<Scalars['String']>;
    model_name_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationFieldinformationUpdateInput = {
    fieldWidth?: InputMaybe<Scalars['String']>;
    fieldName?: InputMaybe<Scalars['String']>;
    fieldName_unset?: InputMaybe<Scalars['Boolean']>;
    fieldTypeCode?: InputMaybe<Scalars['String']>;
    fieldType_unset?: InputMaybe<Scalars['Boolean']>;
    fieldWidth_unset?: InputMaybe<Scalars['Boolean']>;
    fieldPrecision_unset?: InputMaybe<Scalars['Boolean']>;
    fieldPrecision?: InputMaybe<Scalars['String']>;
    fieldTypeCode_unset?: InputMaybe<Scalars['Boolean']>;
    fieldType?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRelationUpdateInput = {
    value?: InputMaybe<Scalars['String']>;
    value_unset?: InputMaybe<Scalars['Boolean']>;
    type?: InputMaybe<Scalars['String']>;
    type_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationAdditional_Metadatum = {
    __typename?: 'Geojson_checksum_relationAdditional_metadatum';
    CIIRES?: Maybe<Scalars['String']>;
    City?: Maybe<Scalars['String']>;
    Climate_region?: Maybe<Scalars['String']>;
    Columns?: Maybe<Scalars['String']>;
    DataCollectionMethod?: Maybe<Scalars['String']>;
    DataProcessingMethod?: Maybe<Scalars['String']>;
    DateTime?: Maybe<Scalars['String']>;
    Description?: Maybe<Scalars['String']>;
    ET?: Maybe<Scalars['String']>;
    ETCorrMm?: Maybe<Scalars['String']>;
    ETLysFiltered?: Maybe<Scalars['String']>;
    J?: Maybe<Scalars['String']>;
    L1ECT1MSCm?: Maybe<Scalars['String']>;
    L1ECT2MSCm?: Maybe<Scalars['String']>;
    L1ECT3MSCm?: Maybe<Scalars['String']>;
    L1EchoT1WC?: Maybe<Scalars['String']>;
    L1EchoT2WC?: Maybe<Scalars['String']>;
    L1EchoT3WC?: Maybe<Scalars['String']>;
    L1FieldTempT4DegC?: Maybe<Scalars['String']>;
    L1LYW?: Maybe<Scalars['String']>;
    L1MPST1KPa?: Maybe<Scalars['String']>;
    L1MPST2KPa?: Maybe<Scalars['String']>;
    L1MPST3KPa?: Maybe<Scalars['String']>;
    L1PumpInS?: Maybe<Scalars['String']>;
    L1PumpOutS?: Maybe<Scalars['String']>;
    L1REFTENST4KPa?: Maybe<Scalars['String']>;
    L1SWW?: Maybe<Scalars['String']>;
    L1TempT1DegC?: Maybe<Scalars['String']>;
    L1TempT2DegC?: Maybe<Scalars['String']>;
    L1TempT3DegC?: Maybe<Scalars['String']>;
    L1VTENST4KPa?: Maybe<Scalars['String']>;
    MATLABCode?: Maybe<Scalars['String']>;
    MasssumFiltered?: Maybe<Scalars['String']>;
    ObservedVariables?: Maybe<Scalars['String']>;
    P?: Maybe<Scalars['String']>;
    PCorrMm?: Maybe<Scalars['String']>;
    PIVTimeSeriesImages?: Maybe<Scalars['String']>;
    PLysFitered?: Maybe<Scalars['String']>;
    PaperDOI?: Maybe<Scalars['String']>;
    PlaneIdentifiers?: Maybe<Scalars['String']>;
    SWWFiltered?: Maybe<Scalars['String']>;
    Sflux?: Maybe<Scalars['String']>;
    USCensusID?: Maybe<Scalars['String']>;
    US_census_region?: Maybe<Scalars['String']>;
    VariableDescription?: Maybe<Scalars['String']>;
    VelocityComponents?: Maybe<Scalars['String']>;
    WellDescriptions?: Maybe<Scalars['String']>;
    appkey?: Maybe<Scalars['String']>;
    cii_billed_gallons?: Maybe<Scalars['String']>;
    citation?: Maybe<Scalars['String']>;
    city?: Maybe<Scalars['String']>;
    comments?: Maybe<Scalars['String']>;
    czo_id?: Maybe<Scalars['String']>;
    czos?: Maybe<Scalars['String']>;
    date?: Maybe<Scalars['String']>;
    disciplines?: Maybe<Scalars['String']>;
    doi?: Maybe<Scalars['String']>;
    keywords?: Maybe<Scalars['String']>;
    latitude?: Maybe<Scalars['String']>;
    location?: Maybe<Scalars['String']>;
    longitude?: Maybe<Scalars['String']>;
    master_billed_gallons?: Maybe<Scalars['String']>;
    metadata_url?: Maybe<Scalars['String']>;
    population?: Maybe<Scalars['String']>;
    private?: Maybe<Scalars['String']>;
    related_datasets?: Maybe<Scalars['String']>;
    related_datasets_hs?: Maybe<Scalars['String']>;
    res_billed_gallons?: Maybe<Scalars['String']>;
    subtitle?: Maybe<Scalars['String']>;
    total_billed_gallons?: Maybe<Scalars['String']>;
    url?: Maybe<Scalars['String']>;
    variables?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationCreator = {
    __typename?: 'Geojson_checksum_relationCreator';
    address?: Maybe<Scalars['String']>;
    creatorOrder?: Maybe<Scalars['String']>;
    email?: Maybe<Scalars['String']>;
    homepage?: Maybe<Scalars['String']>;
    hydroshare_user_id?: Maybe<Scalars['String']>;
    identifiers?: Maybe<Scalars['String']>;
    name?: Maybe<Scalars['String']>;
    organization?: Maybe<Scalars['String']>;
    phone?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFile = {
    __typename?: 'Geojson_checksum_relationFile';
    checksum?: Maybe<Scalars['String']>;
    mime_type?: Maybe<Scalars['String']>;
    path?: Maybe<Scalars['String']>;
    size?: Maybe<Scalars['Int']>;
};

export enum Geojson_Checksum_RelationSortByInput {
    CreatedDesc = 'CREATED_DESC',
    IdDesc = 'ID_DESC',
    _IdAsc = '_ID_ASC',
    PublishedAsc = 'PUBLISHED_ASC',
    TitleDesc = 'TITLE_DESC',
    TypeAsc = 'TYPE_ASC',
    AbstractAsc = 'ABSTRACT_ASC',
    ModifiedDesc = 'MODIFIED_DESC',
    PublishedDesc = 'PUBLISHED_DESC',
    TitleAsc = 'TITLE_ASC',
    LanguageDesc = 'LANGUAGE_DESC',
    AbstractDesc = 'ABSTRACT_DESC',
    CreatedAsc = 'CREATED_ASC',
    IdAsc = 'ID_ASC',
    LanguageAsc = 'LANGUAGE_ASC',
    ModifiedAsc = 'MODIFIED_ASC',
    TypeDesc = 'TYPE_DESC',
    _IdDesc = '_ID_DESC'
}

export type Geojson_Checksum_Relation_Cell_InformationInsertInput = {
    name?: InputMaybe<Scalars['String']>;
    rows?: InputMaybe<Scalars['String']>;
    cellDataType?: InputMaybe<Scalars['String']>;
    cellSizeXValue?: InputMaybe<Scalars['String']>;
    cellSizeYValue?: InputMaybe<Scalars['String']>;
    columns?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationVariableQueryInput = {
    type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type_lte?: InputMaybe<Scalars['String']>;
    type_gt?: InputMaybe<Scalars['String']>;
    type_lt?: InputMaybe<Scalars['String']>;
    shape_gt?: InputMaybe<Scalars['String']>;
    unit?: InputMaybe<Scalars['String']>;
    descriptive_name_gte?: InputMaybe<Scalars['String']>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    descriptive_name_lte?: InputMaybe<Scalars['String']>;
    unit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    shape_lte?: InputMaybe<Scalars['String']>;
    shape_exists?: InputMaybe<Scalars['Boolean']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationVariableQueryInput>>;
    type_exists?: InputMaybe<Scalars['Boolean']>;
    unit_ne?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationVariableQueryInput>>;
    unit_gt?: InputMaybe<Scalars['String']>;
    shape_ne?: InputMaybe<Scalars['String']>;
    shape_lt?: InputMaybe<Scalars['String']>;
    name_lte?: InputMaybe<Scalars['String']>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    descriptive_name_exists?: InputMaybe<Scalars['Boolean']>;
    name_gt?: InputMaybe<Scalars['String']>;
    unit_lt?: InputMaybe<Scalars['String']>;
    descriptive_name_lt?: InputMaybe<Scalars['String']>;
    descriptive_name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    shape_gte?: InputMaybe<Scalars['String']>;
    unit_gte?: InputMaybe<Scalars['String']>;
    descriptive_name_gt?: InputMaybe<Scalars['String']>;
    shape?: InputMaybe<Scalars['String']>;
    unit_lte?: InputMaybe<Scalars['String']>;
    descriptive_name_ne?: InputMaybe<Scalars['String']>;
    name_ne?: InputMaybe<Scalars['String']>;
    name_gte?: InputMaybe<Scalars['String']>;
    shape_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name?: InputMaybe<Scalars['String']>;
    descriptive_name?: InputMaybe<Scalars['String']>;
    name_lt?: InputMaybe<Scalars['String']>;
    type?: InputMaybe<Scalars['String']>;
    unit_exists?: InputMaybe<Scalars['Boolean']>;
    unit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    shape_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type_gte?: InputMaybe<Scalars['String']>;
    type_ne?: InputMaybe<Scalars['String']>;
    descriptive_name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Geojson_Checksum_RelationFunding_Agency = {
    __typename?: 'Geojson_checksum_relationFunding_agency';
    awardNumber?: Maybe<Scalars['String']>;
    awardTitle?: Maybe<Scalars['String']>;
    fundingAgencyName?: Maybe<Scalars['String']>;
    fundingAgencyURL?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationContributor = {
    __typename?: 'Geojson_checksum_relationContributor';
    address?: Maybe<Scalars['String']>;
    email?: Maybe<Scalars['String']>;
    homepage?: Maybe<Scalars['String']>;
    hydroshare_user_id?: Maybe<Scalars['String']>;
    identifiers?: Maybe<Scalars['String']>;
    name?: Maybe<Scalars['String']>;
    organization?: Maybe<Scalars['String']>;
    phone?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationAdditional_MetadatumInsertInput = {
    MasssumFiltered?: InputMaybe<Scalars['String']>;
    res_billed_gallons?: InputMaybe<Scalars['String']>;
    L1PumpInS?: InputMaybe<Scalars['String']>;
    latitude?: InputMaybe<Scalars['String']>;
    PIVTimeSeriesImages?: InputMaybe<Scalars['String']>;
    L1EchoT3WC?: InputMaybe<Scalars['String']>;
    DataProcessingMethod?: InputMaybe<Scalars['String']>;
    ET?: InputMaybe<Scalars['String']>;
    ObservedVariables?: InputMaybe<Scalars['String']>;
    date?: InputMaybe<Scalars['String']>;
    L1MPST2KPa?: InputMaybe<Scalars['String']>;
    related_datasets_hs?: InputMaybe<Scalars['String']>;
    total_billed_gallons?: InputMaybe<Scalars['String']>;
    L1MPST3KPa?: InputMaybe<Scalars['String']>;
    PaperDOI?: InputMaybe<Scalars['String']>;
    Description?: InputMaybe<Scalars['String']>;
    VelocityComponents?: InputMaybe<Scalars['String']>;
    L1TempT3DegC?: InputMaybe<Scalars['String']>;
    DataCollectionMethod?: InputMaybe<Scalars['String']>;
    L1TempT1DegC?: InputMaybe<Scalars['String']>;
    P?: InputMaybe<Scalars['String']>;
    appkey?: InputMaybe<Scalars['String']>;
    czo_id?: InputMaybe<Scalars['String']>;
    L1MPST1KPa?: InputMaybe<Scalars['String']>;
    metadata_url?: InputMaybe<Scalars['String']>;
    population?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers?: InputMaybe<Scalars['String']>;
    subtitle?: InputMaybe<Scalars['String']>;
    L1LYW?: InputMaybe<Scalars['String']>;
    private?: InputMaybe<Scalars['String']>;
    CIIRES?: InputMaybe<Scalars['String']>;
    Sflux?: InputMaybe<Scalars['String']>;
    ETLysFiltered?: InputMaybe<Scalars['String']>;
    VariableDescription?: InputMaybe<Scalars['String']>;
    L1EchoT2WC?: InputMaybe<Scalars['String']>;
    czos?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm?: InputMaybe<Scalars['String']>;
    longitude?: InputMaybe<Scalars['String']>;
    US_census_region?: InputMaybe<Scalars['String']>;
    DateTime?: InputMaybe<Scalars['String']>;
    Columns?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa?: InputMaybe<Scalars['String']>;
    location?: InputMaybe<Scalars['String']>;
    Climate_region?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm?: InputMaybe<Scalars['String']>;
    L1PumpOutS?: InputMaybe<Scalars['String']>;
    L1EchoT1WC?: InputMaybe<Scalars['String']>;
    L1TempT2DegC?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa?: InputMaybe<Scalars['String']>;
    MATLABCode?: InputMaybe<Scalars['String']>;
    L1SWW?: InputMaybe<Scalars['String']>;
    citation?: InputMaybe<Scalars['String']>;
    keywords?: InputMaybe<Scalars['String']>;
    url?: InputMaybe<Scalars['String']>;
    WellDescriptions?: InputMaybe<Scalars['String']>;
    USCensusID?: InputMaybe<Scalars['String']>;
    disciplines?: InputMaybe<Scalars['String']>;
    variables?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC?: InputMaybe<Scalars['String']>;
    PLysFitered?: InputMaybe<Scalars['String']>;
    SWWFiltered?: InputMaybe<Scalars['String']>;
    ETCorrMm?: InputMaybe<Scalars['String']>;
    PCorrMm?: InputMaybe<Scalars['String']>;
    city?: InputMaybe<Scalars['String']>;
    comments?: InputMaybe<Scalars['String']>;
    City?: InputMaybe<Scalars['String']>;
    related_datasets?: InputMaybe<Scalars['String']>;
    doi?: InputMaybe<Scalars['String']>;
    master_billed_gallons?: InputMaybe<Scalars['String']>;
    cii_billed_gallons?: InputMaybe<Scalars['String']>;
    J?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Model_OutputInsertInput = {
    includes_output?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFieldinformationQueryInput = {
    fieldName_lte?: InputMaybe<Scalars['String']>;
    fieldWidth_gte?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationFieldinformationQueryInput>>;
    fieldTypeCode_gt?: InputMaybe<Scalars['String']>;
    fieldPrecision_lt?: InputMaybe<Scalars['String']>;
    fieldPrecision_gt?: InputMaybe<Scalars['String']>;
    fieldType_exists?: InputMaybe<Scalars['Boolean']>;
    fieldName_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldWidth_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldType_gt?: InputMaybe<Scalars['String']>;
    fieldTypeCode_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldTypeCode_gte?: InputMaybe<Scalars['String']>;
    fieldTypeCode_exists?: InputMaybe<Scalars['Boolean']>;
    fieldWidth_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldPrecision_gte?: InputMaybe<Scalars['String']>;
    fieldTypeCode_lt?: InputMaybe<Scalars['String']>;
    fieldType_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldPrecision_lte?: InputMaybe<Scalars['String']>;
    fieldTypeCode_ne?: InputMaybe<Scalars['String']>;
    fieldPrecision_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldType_gte?: InputMaybe<Scalars['String']>;
    fieldTypeCode?: InputMaybe<Scalars['String']>;
    fieldName_gte?: InputMaybe<Scalars['String']>;
    fieldPrecision_ne?: InputMaybe<Scalars['String']>;
    fieldWidth_ne?: InputMaybe<Scalars['String']>;
    fieldType?: InputMaybe<Scalars['String']>;
    fieldWidth_gt?: InputMaybe<Scalars['String']>;
    fieldType_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationFieldinformationQueryInput>>;
    fieldPrecision_exists?: InputMaybe<Scalars['Boolean']>;
    fieldType_ne?: InputMaybe<Scalars['String']>;
    fieldName_lt?: InputMaybe<Scalars['String']>;
    fieldPrecision_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldWidth_lt?: InputMaybe<Scalars['String']>;
    fieldName?: InputMaybe<Scalars['String']>;
    fieldName_gt?: InputMaybe<Scalars['String']>;
    fieldName_ne?: InputMaybe<Scalars['String']>;
    fieldWidth?: InputMaybe<Scalars['String']>;
    fieldType_lte?: InputMaybe<Scalars['String']>;
    fieldPrecision?: InputMaybe<Scalars['String']>;
    fieldName_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldType_lt?: InputMaybe<Scalars['String']>;
    fieldTypeCode_lte?: InputMaybe<Scalars['String']>;
    fieldWidth_lte?: InputMaybe<Scalars['String']>;
    fieldName_exists?: InputMaybe<Scalars['Boolean']>;
    fieldTypeCode_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fieldWidth_exists?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationIdentifier = {
    __typename?: 'Geojson_checksum_relationIdentifier';
    name?: Maybe<Scalars['String']>;
    url?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationContributorUpdateInput = {
    organization?: InputMaybe<Scalars['String']>;
    homepage?: InputMaybe<Scalars['String']>;
    email?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    address?: InputMaybe<Scalars['String']>;
    address_unset?: InputMaybe<Scalars['Boolean']>;
    phone?: InputMaybe<Scalars['String']>;
    homepage_unset?: InputMaybe<Scalars['Boolean']>;
    email_unset?: InputMaybe<Scalars['Boolean']>;
    identifiers_unset?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    organization_unset?: InputMaybe<Scalars['Boolean']>;
    hydroshare_user_id_unset?: InputMaybe<Scalars['Boolean']>;
    identifiers?: InputMaybe<Scalars['String']>;
    phone_unset?: InputMaybe<Scalars['Boolean']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationFileUpdateInput = {
    checksum?: InputMaybe<Scalars['String']>;
    mime_type?: InputMaybe<Scalars['String']>;
    path_unset?: InputMaybe<Scalars['Boolean']>;
    size_inc?: InputMaybe<Scalars['Int']>;
    mime_type_unset?: InputMaybe<Scalars['Boolean']>;
    size_unset?: InputMaybe<Scalars['Boolean']>;
    size?: InputMaybe<Scalars['Int']>;
    checksum_unset?: InputMaybe<Scalars['Boolean']>;
    path?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationInsertInput = {
    published?: InputMaybe<Scalars['String']>;
    ori_coverage?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOri_CoverageInsertInput>>>;
    _ori_coverage?: InputMaybe<Geojson_Checksum_Relation_Ori_CoverageInsertInput>;
    publisher?: InputMaybe<Geojson_Checksum_RelationPublisherInsertInput>;
    creators?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationCreatorInsertInput>>>;
    variables?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationVariableInsertInput>>>;
    title?: InputMaybe<Scalars['String']>;
    language?: InputMaybe<Scalars['String']>;
    additional_metadata?: InputMaybe<Geojson_Checksum_RelationAdditional_MetadatumInsertInput>;
    id?: InputMaybe<Scalars['String']>;
    type?: InputMaybe<Scalars['String']>;
    _band_information?: InputMaybe<Geojson_Checksum_Relation_Band_InformationInsertInput>;
    _cell_information?: InputMaybe<Geojson_Checksum_Relation_Cell_InformationInsertInput>;
    subjects?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    funding_agencies?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFunding_AgencyInsertInput>>>;
    _mpmetadata?: InputMaybe<Geojson_Checksum_Relation_MpmetadatumInsertInput>;
    identifiers?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationIdentifierInsertInput>>>;
    _id?: InputMaybe<Scalars['ObjectId']>;
    files?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFileInsertInput>>>;
    spatial_coverage?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageInsertInput>;
    created?: InputMaybe<Scalars['String']>;
    originalcoverages?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOriginalcoverageInsertInput>>>;
    abstract?: InputMaybe<Scalars['String']>;
    _model_output?: InputMaybe<Geojson_Checksum_Relation_Model_OutputInsertInput>;
    contributors?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationContributorInsertInput>>>;
    geometryinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationGeometryinformationInsertInput>>>;
    _executed_by?: InputMaybe<Geojson_Checksum_Relation_Executed_ByInsertInput>;
    fieldinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFieldinformationInsertInput>>>;
    modified?: InputMaybe<Scalars['String']>;
    rights?: InputMaybe<Geojson_Checksum_RelationRightInsertInput>;
    period_coverage?: InputMaybe<Geojson_Checksum_RelationPeriod_CoverageInsertInput>;
    relations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationRelationInsertInput>>>;
};

export type Geojson_Checksum_RelationFileInsertInput = {
    checksum?: InputMaybe<Scalars['String']>;
    mime_type?: InputMaybe<Scalars['String']>;
    path?: InputMaybe<Scalars['String']>;
    size?: InputMaybe<Scalars['Int']>;
};

export type Geojson_Checksum_RelationGeometryinformation = {
    __typename?: 'Geojson_checksum_relationGeometryinformation';
    featureCount?: Maybe<Scalars['String']>;
    geometryType?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationIdentifierQueryInput = {
    OR?: InputMaybe<Array<Geojson_Checksum_RelationIdentifierQueryInput>>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationIdentifierQueryInput>>;
    name_ne?: InputMaybe<Scalars['String']>;
    url_exists?: InputMaybe<Scalars['Boolean']>;
    url_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name?: InputMaybe<Scalars['String']>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    name_lte?: InputMaybe<Scalars['String']>;
    url_gt?: InputMaybe<Scalars['String']>;
    url_lte?: InputMaybe<Scalars['String']>;
    name_lt?: InputMaybe<Scalars['String']>;
    url_lt?: InputMaybe<Scalars['String']>;
    url_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    url?: InputMaybe<Scalars['String']>;
    url_ne?: InputMaybe<Scalars['String']>;
    name_gte?: InputMaybe<Scalars['String']>;
    url_gte?: InputMaybe<Scalars['String']>;
    name_gt?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationAdditional_MetadatumUpdateInput = {
    related_datasets_unset?: InputMaybe<Scalars['Boolean']>;
    ETLysFiltered?: InputMaybe<Scalars['String']>;
    Climate_region_unset?: InputMaybe<Scalars['Boolean']>;
    private?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_unset?: InputMaybe<Scalars['Boolean']>;
    L1FieldTempT4DegC_unset?: InputMaybe<Scalars['Boolean']>;
    Sflux_unset?: InputMaybe<Scalars['Boolean']>;
    VariableDescription?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_unset?: InputMaybe<Scalars['Boolean']>;
    url?: InputMaybe<Scalars['String']>;
    subtitle_unset?: InputMaybe<Scalars['Boolean']>;
    L1MPST1KPa_unset?: InputMaybe<Scalars['Boolean']>;
    L1MPST2KPa_unset?: InputMaybe<Scalars['Boolean']>;
    longitude_unset?: InputMaybe<Scalars['Boolean']>;
    czo_id_unset?: InputMaybe<Scalars['Boolean']>;
    DateTime?: InputMaybe<Scalars['String']>;
    keywords?: InputMaybe<Scalars['String']>;
    PCorrMm_unset?: InputMaybe<Scalars['Boolean']>;
    population?: InputMaybe<Scalars['String']>;
    res_billed_gallons_unset?: InputMaybe<Scalars['Boolean']>;
    L1PumpInS_unset?: InputMaybe<Scalars['Boolean']>;
    cii_billed_gallons_unset?: InputMaybe<Scalars['Boolean']>;
    L1EchoT1WC_unset?: InputMaybe<Scalars['Boolean']>;
    appkey?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_unset?: InputMaybe<Scalars['Boolean']>;
    VariableDescription_unset?: InputMaybe<Scalars['Boolean']>;
    location_unset?: InputMaybe<Scalars['Boolean']>;
    ETLysFiltered_unset?: InputMaybe<Scalars['Boolean']>;
    ETCorrMm_unset?: InputMaybe<Scalars['Boolean']>;
    PlaneIdentifiers_unset?: InputMaybe<Scalars['Boolean']>;
    Columns?: InputMaybe<Scalars['String']>;
    PaperDOI?: InputMaybe<Scalars['String']>;
    MasssumFiltered_unset?: InputMaybe<Scalars['Boolean']>;
    related_datasets_hs_unset?: InputMaybe<Scalars['Boolean']>;
    L1VTENST4KPa_unset?: InputMaybe<Scalars['Boolean']>;
    latitude?: InputMaybe<Scalars['String']>;
    CIIRES?: InputMaybe<Scalars['String']>;
    PLysFitered_unset?: InputMaybe<Scalars['Boolean']>;
    City?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_unset?: InputMaybe<Scalars['Boolean']>;
    MATLABCode?: InputMaybe<Scalars['String']>;
    ObservedVariables_unset?: InputMaybe<Scalars['Boolean']>;
    longitude?: InputMaybe<Scalars['String']>;
    appkey_unset?: InputMaybe<Scalars['Boolean']>;
    ET?: InputMaybe<Scalars['String']>;
    population_unset?: InputMaybe<Scalars['Boolean']>;
    L1LYW_unset?: InputMaybe<Scalars['Boolean']>;
    CIIRES_unset?: InputMaybe<Scalars['Boolean']>;
    ET_unset?: InputMaybe<Scalars['Boolean']>;
    latitude_unset?: InputMaybe<Scalars['Boolean']>;
    Sflux?: InputMaybe<Scalars['String']>;
    Columns_unset?: InputMaybe<Scalars['Boolean']>;
    DataProcessingMethod?: InputMaybe<Scalars['String']>;
    url_unset?: InputMaybe<Scalars['Boolean']>;
    keywords_unset?: InputMaybe<Scalars['Boolean']>;
    comments_unset?: InputMaybe<Scalars['Boolean']>;
    WellDescriptions_unset?: InputMaybe<Scalars['Boolean']>;
    VelocityComponents_unset?: InputMaybe<Scalars['Boolean']>;
    L1EchoT2WC?: InputMaybe<Scalars['String']>;
    ETCorrMm?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm?: InputMaybe<Scalars['String']>;
    total_billed_gallons_unset?: InputMaybe<Scalars['Boolean']>;
    L1SWW?: InputMaybe<Scalars['String']>;
    location?: InputMaybe<Scalars['String']>;
    cii_billed_gallons?: InputMaybe<Scalars['String']>;
    L1MPST2KPa?: InputMaybe<Scalars['String']>;
    citation?: InputMaybe<Scalars['String']>;
    variables_unset?: InputMaybe<Scalars['Boolean']>;
    czo_id?: InputMaybe<Scalars['String']>;
    PaperDOI_unset?: InputMaybe<Scalars['Boolean']>;
    L1LYW?: InputMaybe<Scalars['String']>;
    SWWFiltered?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm?: InputMaybe<Scalars['String']>;
    related_datasets?: InputMaybe<Scalars['String']>;
    subtitle?: InputMaybe<Scalars['String']>;
    citation_unset?: InputMaybe<Scalars['Boolean']>;
    WellDescriptions?: InputMaybe<Scalars['String']>;
    City_unset?: InputMaybe<Scalars['Boolean']>;
    master_billed_gallons_unset?: InputMaybe<Scalars['Boolean']>;
    DataProcessingMethod_unset?: InputMaybe<Scalars['Boolean']>;
    L1ECT2MSCm_unset?: InputMaybe<Scalars['Boolean']>;
    P_unset?: InputMaybe<Scalars['Boolean']>;
    L1MPST3KPa_unset?: InputMaybe<Scalars['Boolean']>;
    L1REFTENST4KPa?: InputMaybe<Scalars['String']>;
    L1MPST1KPa?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa?: InputMaybe<Scalars['String']>;
    metadata_url_unset?: InputMaybe<Scalars['Boolean']>;
    czos_unset?: InputMaybe<Scalars['Boolean']>;
    PLysFitered?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_unset?: InputMaybe<Scalars['Boolean']>;
    L1PumpOutS_unset?: InputMaybe<Scalars['Boolean']>;
    PCorrMm?: InputMaybe<Scalars['String']>;
    J_unset?: InputMaybe<Scalars['Boolean']>;
    total_billed_gallons?: InputMaybe<Scalars['String']>;
    private_unset?: InputMaybe<Scalars['Boolean']>;
    ObservedVariables?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC?: InputMaybe<Scalars['String']>;
    P?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa_unset?: InputMaybe<Scalars['Boolean']>;
    US_census_region?: InputMaybe<Scalars['String']>;
    USCensusID?: InputMaybe<Scalars['String']>;
    L1PumpInS?: InputMaybe<Scalars['String']>;
    disciplines?: InputMaybe<Scalars['String']>;
    variables?: InputMaybe<Scalars['String']>;
    L1MPST3KPa?: InputMaybe<Scalars['String']>;
    MasssumFiltered?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers?: InputMaybe<Scalars['String']>;
    L1SWW_unset?: InputMaybe<Scalars['Boolean']>;
    PIVTimeSeriesImages_unset?: InputMaybe<Scalars['Boolean']>;
    related_datasets_hs?: InputMaybe<Scalars['String']>;
    metadata_url?: InputMaybe<Scalars['String']>;
    disciplines_unset?: InputMaybe<Scalars['Boolean']>;
    L1ECT3MSCm_unset?: InputMaybe<Scalars['Boolean']>;
    Description?: InputMaybe<Scalars['String']>;
    J?: InputMaybe<Scalars['String']>;
    L1EchoT3WC?: InputMaybe<Scalars['String']>;
    master_billed_gallons?: InputMaybe<Scalars['String']>;
    USCensusID_unset?: InputMaybe<Scalars['Boolean']>;
    Climate_region?: InputMaybe<Scalars['String']>;
    L1TempT1DegC?: InputMaybe<Scalars['String']>;
    L1TempT2DegC?: InputMaybe<Scalars['String']>;
    city?: InputMaybe<Scalars['String']>;
    SWWFiltered_unset?: InputMaybe<Scalars['Boolean']>;
    PIVTimeSeriesImages?: InputMaybe<Scalars['String']>;
    US_census_region_unset?: InputMaybe<Scalars['Boolean']>;
    L1PumpOutS?: InputMaybe<Scalars['String']>;
    date_unset?: InputMaybe<Scalars['Boolean']>;
    DateTime_unset?: InputMaybe<Scalars['Boolean']>;
    doi_unset?: InputMaybe<Scalars['Boolean']>;
    Description_unset?: InputMaybe<Scalars['Boolean']>;
    L1EchoT1WC?: InputMaybe<Scalars['String']>;
    DataCollectionMethod?: InputMaybe<Scalars['String']>;
    MATLABCode_unset?: InputMaybe<Scalars['Boolean']>;
    city_unset?: InputMaybe<Scalars['Boolean']>;
    res_billed_gallons?: InputMaybe<Scalars['String']>;
    L1TempT2DegC_unset?: InputMaybe<Scalars['Boolean']>;
    doi?: InputMaybe<Scalars['String']>;
    L1EchoT3WC_unset?: InputMaybe<Scalars['Boolean']>;
    czos?: InputMaybe<Scalars['String']>;
    VelocityComponents?: InputMaybe<Scalars['String']>;
    L1TempT3DegC?: InputMaybe<Scalars['String']>;
    date?: InputMaybe<Scalars['String']>;
    comments?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOriginalcoverageQueryInput = {
    unit_gt?: InputMaybe<Scalars['String']>;
    northlimit_lt?: InputMaybe<Scalars['String']>;
    southlimit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_lt?: InputMaybe<Scalars['String']>;
    datum_lt?: InputMaybe<Scalars['String']>;
    unit_exists?: InputMaybe<Scalars['Boolean']>;
    projection_string_gt?: InputMaybe<Scalars['String']>;
    datum?: InputMaybe<Scalars['String']>;
    eastlimit_lt?: InputMaybe<Scalars['String']>;
    westlimit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name?: InputMaybe<Scalars['String']>;
    northlimit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_gt?: InputMaybe<Scalars['String']>;
    eastlimit?: InputMaybe<Scalars['String']>;
    unit_lt?: InputMaybe<Scalars['String']>;
    datum_lte?: InputMaybe<Scalars['String']>;
    northlimit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    northlimit_lte?: InputMaybe<Scalars['String']>;
    westlimit_lte?: InputMaybe<Scalars['String']>;
    eastlimit_gte?: InputMaybe<Scalars['String']>;
    datum_gte?: InputMaybe<Scalars['String']>;
    projection_string_gte?: InputMaybe<Scalars['String']>;
    southlimit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    eastlimit_exists?: InputMaybe<Scalars['Boolean']>;
    datum_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_ne?: InputMaybe<Scalars['String']>;
    unit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_lte?: InputMaybe<Scalars['String']>;
    unit_gte?: InputMaybe<Scalars['String']>;
    eastlimit_ne?: InputMaybe<Scalars['String']>;
    westlimit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    eastlimit_lte?: InputMaybe<Scalars['String']>;
    eastlimit_gt?: InputMaybe<Scalars['String']>;
    projection_string_lt?: InputMaybe<Scalars['String']>;
    westlimit_gt?: InputMaybe<Scalars['String']>;
    eastlimit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    southlimit_lt?: InputMaybe<Scalars['String']>;
    northlimit_ne?: InputMaybe<Scalars['String']>;
    westlimit_exists?: InputMaybe<Scalars['Boolean']>;
    northlimit?: InputMaybe<Scalars['String']>;
    projection_string?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationOriginalcoverageQueryInput>>;
    southlimit_gt?: InputMaybe<Scalars['String']>;
    unit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_ne?: InputMaybe<Scalars['String']>;
    projection_name_gte?: InputMaybe<Scalars['String']>;
    projection_string_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_exists?: InputMaybe<Scalars['Boolean']>;
    southlimit_exists?: InputMaybe<Scalars['Boolean']>;
    northlimit_gt?: InputMaybe<Scalars['String']>;
    unit_lte?: InputMaybe<Scalars['String']>;
    southlimit_ne?: InputMaybe<Scalars['String']>;
    southlimit_gte?: InputMaybe<Scalars['String']>;
    southlimit?: InputMaybe<Scalars['String']>;
    eastlimit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    datum_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    westlimit_lt?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationOriginalcoverageQueryInput>>;
    datum_gt?: InputMaybe<Scalars['String']>;
    northlimit_exists?: InputMaybe<Scalars['Boolean']>;
    unit_ne?: InputMaybe<Scalars['String']>;
    projection_string_exists?: InputMaybe<Scalars['Boolean']>;
    southlimit_lte?: InputMaybe<Scalars['String']>;
    westlimit_ne?: InputMaybe<Scalars['String']>;
    projection_string_lte?: InputMaybe<Scalars['String']>;
    westlimit_gte?: InputMaybe<Scalars['String']>;
    projection_name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    westlimit?: InputMaybe<Scalars['String']>;
    unit?: InputMaybe<Scalars['String']>;
    datum_exists?: InputMaybe<Scalars['Boolean']>;
    northlimit_gte?: InputMaybe<Scalars['String']>;
    datum_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOriginalcoverageInsertInput = {
    datum?: InputMaybe<Scalars['String']>;
    eastlimit?: InputMaybe<Scalars['String']>;
    northlimit?: InputMaybe<Scalars['String']>;
    projection_name?: InputMaybe<Scalars['String']>;
    projection_string?: InputMaybe<Scalars['String']>;
    southlimit?: InputMaybe<Scalars['String']>;
    unit?: InputMaybe<Scalars['String']>;
    westlimit?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationAdditional_MetadatumQueryInput = {
    L1EchoT3WC_ne?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_lte?: InputMaybe<Scalars['String']>;
    SWWFiltered?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_gt?: InputMaybe<Scalars['String']>;
    comments_lte?: InputMaybe<Scalars['String']>;
    WellDescriptions?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationAdditional_MetadatumQueryInput>>;
    czo_id_lt?: InputMaybe<Scalars['String']>;
    related_datasets_lt?: InputMaybe<Scalars['String']>;
    P_lt?: InputMaybe<Scalars['String']>;
    Columns_lt?: InputMaybe<Scalars['String']>;
    related_datasets_hs_exists?: InputMaybe<Scalars['Boolean']>;
    subtitle_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT1DegC_lt?: InputMaybe<Scalars['String']>;
    res_billed_gallons?: InputMaybe<Scalars['String']>;
    appkey_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    P_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    url_gt?: InputMaybe<Scalars['String']>;
    population_lt?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    location_gte?: InputMaybe<Scalars['String']>;
    J_gt?: InputMaybe<Scalars['String']>;
    MasssumFiltered_gt?: InputMaybe<Scalars['String']>;
    L1TempT3DegC?: InputMaybe<Scalars['String']>;
    PCorrMm_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT2DegC_gt?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    czos_lt?: InputMaybe<Scalars['String']>;
    related_datasets_hs_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT1DegC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DataProcessingMethod_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT2DegC_ne?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_lt?: InputMaybe<Scalars['String']>;
    comments_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ETLysFiltered_exists?: InputMaybe<Scalars['Boolean']>;
    L1MPST2KPa_exists?: InputMaybe<Scalars['Boolean']>;
    cii_billed_gallons_gt?: InputMaybe<Scalars['String']>;
    PLysFitered_exists?: InputMaybe<Scalars['Boolean']>;
    CIIRES_gte?: InputMaybe<Scalars['String']>;
    res_billed_gallons_exists?: InputMaybe<Scalars['Boolean']>;
    L1PumpOutS_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    latitude_lte?: InputMaybe<Scalars['String']>;
    MATLABCode_lt?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm_lte?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    SWWFiltered_lte?: InputMaybe<Scalars['String']>;
    Columns_lte?: InputMaybe<Scalars['String']>;
    total_billed_gallons_gt?: InputMaybe<Scalars['String']>;
    USCensusID_lte?: InputMaybe<Scalars['String']>;
    DateTime_ne?: InputMaybe<Scalars['String']>;
    keywords_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    appkey_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1PumpInS_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1ECT1MSCm_lt?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC?: InputMaybe<Scalars['String']>;
    subtitle_lt?: InputMaybe<Scalars['String']>;
    L1LYW?: InputMaybe<Scalars['String']>;
    variables_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1EchoT2WC_gt?: InputMaybe<Scalars['String']>;
    res_billed_gallons_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PlaneIdentifiers?: InputMaybe<Scalars['String']>;
    latitude_gt?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    VelocityComponents_exists?: InputMaybe<Scalars['Boolean']>;
    subtitle?: InputMaybe<Scalars['String']>;
    url_gte?: InputMaybe<Scalars['String']>;
    subtitle_exists?: InputMaybe<Scalars['Boolean']>;
    appkey_lt?: InputMaybe<Scalars['String']>;
    doi?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_lt?: InputMaybe<Scalars['String']>;
    PaperDOI_lte?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_gte?: InputMaybe<Scalars['String']>;
    L1LYW_lte?: InputMaybe<Scalars['String']>;
    ETLysFiltered_gt?: InputMaybe<Scalars['String']>;
    private_lt?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_ne?: InputMaybe<Scalars['String']>;
    url_ne?: InputMaybe<Scalars['String']>;
    PCorrMm?: InputMaybe<Scalars['String']>;
    master_billed_gallons_lte?: InputMaybe<Scalars['String']>;
    longitude_lt?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    WellDescriptions_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1REFTENST4KPa_gte?: InputMaybe<Scalars['String']>;
    CIIRES_lt?: InputMaybe<Scalars['String']>;
    City_gt?: InputMaybe<Scalars['String']>;
    ObservedVariables_lte?: InputMaybe<Scalars['String']>;
    master_billed_gallons?: InputMaybe<Scalars['String']>;
    L1PumpOutS?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa_lte?: InputMaybe<Scalars['String']>;
    Climate_region_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1EchoT1WC_gt?: InputMaybe<Scalars['String']>;
    citation_lt?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_gte?: InputMaybe<Scalars['String']>;
    Description_gt?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa_ne?: InputMaybe<Scalars['String']>;
    P_gte?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1LYW_lt?: InputMaybe<Scalars['String']>;
    keywords?: InputMaybe<Scalars['String']>;
    US_census_region?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_ne?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_exists?: InputMaybe<Scalars['Boolean']>;
    longitude_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    private_gt?: InputMaybe<Scalars['String']>;
    PCorrMm_exists?: InputMaybe<Scalars['Boolean']>;
    doi_lte?: InputMaybe<Scalars['String']>;
    variables_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    res_billed_gallons_lte?: InputMaybe<Scalars['String']>;
    ETCorrMm_lte?: InputMaybe<Scalars['String']>;
    url_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    doi_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1EchoT1WC?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_lt?: InputMaybe<Scalars['String']>;
    P?: InputMaybe<Scalars['String']>;
    VariableDescription_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PIVTimeSeriesImages_lt?: InputMaybe<Scalars['String']>;
    master_billed_gallons_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    czos_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DateTime_lte?: InputMaybe<Scalars['String']>;
    metadata_url_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Columns_gte?: InputMaybe<Scalars['String']>;
    subtitle_gte?: InputMaybe<Scalars['String']>;
    L1PumpInS?: InputMaybe<Scalars['String']>;
    metadata_url?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_exists?: InputMaybe<Scalars['Boolean']>;
    PIVTimeSeriesImages_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PlaneIdentifiers_lte?: InputMaybe<Scalars['String']>;
    total_billed_gallons_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    citation_lte?: InputMaybe<Scalars['String']>;
    population_ne?: InputMaybe<Scalars['String']>;
    city_lte?: InputMaybe<Scalars['String']>;
    ET_gt?: InputMaybe<Scalars['String']>;
    PaperDOI?: InputMaybe<Scalars['String']>;
    Climate_region_ne?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_ne?: InputMaybe<Scalars['String']>;
    USCensusID_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    url_lt?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_ne?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    longitude?: InputMaybe<Scalars['String']>;
    czos_lte?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_ne?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers_exists?: InputMaybe<Scalars['Boolean']>;
    keywords_ne?: InputMaybe<Scalars['String']>;
    date_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ObservedVariables_gt?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_lte?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    keywords_exists?: InputMaybe<Scalars['Boolean']>;
    PaperDOI_gt?: InputMaybe<Scalars['String']>;
    ETLysFiltered_lt?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers_gt?: InputMaybe<Scalars['String']>;
    ETCorrMm_gt?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_ne?: InputMaybe<Scalars['String']>;
    MasssumFiltered_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT3DegC_gte?: InputMaybe<Scalars['String']>;
    MasssumFiltered_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    disciplines_gt?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_lte?: InputMaybe<Scalars['String']>;
    PIVTimeSeriesImages_gte?: InputMaybe<Scalars['String']>;
    PaperDOI_exists?: InputMaybe<Scalars['Boolean']>;
    Climate_region_lte?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_ne?: InputMaybe<Scalars['String']>;
    L1EchoT3WC_lt?: InputMaybe<Scalars['String']>;
    related_datasets_lte?: InputMaybe<Scalars['String']>;
    latitude_exists?: InputMaybe<Scalars['Boolean']>;
    ETCorrMm_exists?: InputMaybe<Scalars['Boolean']>;
    Climate_region_exists?: InputMaybe<Scalars['Boolean']>;
    PaperDOI_gte?: InputMaybe<Scalars['String']>;
    J_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    longitude_gt?: InputMaybe<Scalars['String']>;
    VelocityComponents_lt?: InputMaybe<Scalars['String']>;
    SWWFiltered_exists?: InputMaybe<Scalars['Boolean']>;
    cii_billed_gallons_lte?: InputMaybe<Scalars['String']>;
    L1EchoT2WC?: InputMaybe<Scalars['String']>;
    L1MPST1KPa_lte?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    citation_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1ECT2MSCm_lt?: InputMaybe<Scalars['String']>;
    PCorrMm_gte?: InputMaybe<Scalars['String']>;
    Description_exists?: InputMaybe<Scalars['Boolean']>;
    comments_gt?: InputMaybe<Scalars['String']>;
    L1LYW_gt?: InputMaybe<Scalars['String']>;
    metadata_url_exists?: InputMaybe<Scalars['Boolean']>;
    L1TempT2DegC_exists?: InputMaybe<Scalars['Boolean']>;
    L1LYW_exists?: InputMaybe<Scalars['Boolean']>;
    L1EchoT3WC?: InputMaybe<Scalars['String']>;
    DateTime_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    keywords_lte?: InputMaybe<Scalars['String']>;
    metadata_url_lt?: InputMaybe<Scalars['String']>;
    related_datasets_hs_ne?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_exists?: InputMaybe<Scalars['Boolean']>;
    L1ECT3MSCm_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1MPST1KPa_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    date_lte?: InputMaybe<Scalars['String']>;
    population_lte?: InputMaybe<Scalars['String']>;
    L1MPST3KPa?: InputMaybe<Scalars['String']>;
    private_ne?: InputMaybe<Scalars['String']>;
    L1MPST1KPa_lt?: InputMaybe<Scalars['String']>;
    ET?: InputMaybe<Scalars['String']>;
    private_lte?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_gt?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_exists?: InputMaybe<Scalars['Boolean']>;
    related_datasets_gt?: InputMaybe<Scalars['String']>;
    USCensusID_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ET_ne?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_lte?: InputMaybe<Scalars['String']>;
    L1PumpOutS_exists?: InputMaybe<Scalars['Boolean']>;
    SWWFiltered_gte?: InputMaybe<Scalars['String']>;
    metadata_url_gte?: InputMaybe<Scalars['String']>;
    total_billed_gallons?: InputMaybe<Scalars['String']>;
    date_gte?: InputMaybe<Scalars['String']>;
    total_billed_gallons_lte?: InputMaybe<Scalars['String']>;
    czos_ne?: InputMaybe<Scalars['String']>;
    metadata_url_lte?: InputMaybe<Scalars['String']>;
    related_datasets?: InputMaybe<Scalars['String']>;
    city_gte?: InputMaybe<Scalars['String']>;
    CIIRES_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    MasssumFiltered?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa_gt?: InputMaybe<Scalars['String']>;
    SWWFiltered_ne?: InputMaybe<Scalars['String']>;
    MATLABCode_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DataCollectionMethod?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_lte?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    master_billed_gallons_ne?: InputMaybe<Scalars['String']>;
    citation?: InputMaybe<Scalars['String']>;
    L1SWW_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    disciplines_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DataCollectionMethod_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PLysFitered_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1PumpInS_gte?: InputMaybe<Scalars['String']>;
    L1PumpInS_ne?: InputMaybe<Scalars['String']>;
    metadata_url_gt?: InputMaybe<Scalars['String']>;
    J?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_lte?: InputMaybe<Scalars['String']>;
    MasssumFiltered_ne?: InputMaybe<Scalars['String']>;
    Sflux_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DateTime_lt?: InputMaybe<Scalars['String']>;
    L1TempT2DegC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ObservedVariables_lt?: InputMaybe<Scalars['String']>;
    L1PumpInS_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Description_gte?: InputMaybe<Scalars['String']>;
    Description_lt?: InputMaybe<Scalars['String']>;
    L1TempT2DegC_lte?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_ne?: InputMaybe<Scalars['String']>;
    VariableDescription?: InputMaybe<Scalars['String']>;
    USCensusID?: InputMaybe<Scalars['String']>;
    SWWFiltered_lt?: InputMaybe<Scalars['String']>;
    P_ne?: InputMaybe<Scalars['String']>;
    keywords_lt?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_exists?: InputMaybe<Scalars['Boolean']>;
    location?: InputMaybe<Scalars['String']>;
    CIIRES_ne?: InputMaybe<Scalars['String']>;
    L1TempT2DegC_gte?: InputMaybe<Scalars['String']>;
    population_gte?: InputMaybe<Scalars['String']>;
    longitude_exists?: InputMaybe<Scalars['Boolean']>;
    USCensusID_gt?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_gte?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_gte?: InputMaybe<Scalars['String']>;
    WellDescriptions_gt?: InputMaybe<Scalars['String']>;
    USCensusID_gte?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_gte?: InputMaybe<Scalars['String']>;
    US_census_region_lt?: InputMaybe<Scalars['String']>;
    variables_lte?: InputMaybe<Scalars['String']>;
    Columns?: InputMaybe<Scalars['String']>;
    res_billed_gallons_gt?: InputMaybe<Scalars['String']>;
    PaperDOI_ne?: InputMaybe<Scalars['String']>;
    VelocityComponents_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    longitude_ne?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm_gt?: InputMaybe<Scalars['String']>;
    ET_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    subtitle_lte?: InputMaybe<Scalars['String']>;
    population_exists?: InputMaybe<Scalars['Boolean']>;
    MATLABCode_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT2DegC_lt?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_exists?: InputMaybe<Scalars['Boolean']>;
    J_lte?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_lt?: InputMaybe<Scalars['String']>;
    ETCorrMm_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1VTENST4KPa_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    czo_id_exists?: InputMaybe<Scalars['Boolean']>;
    L1EchoT3WC_exists?: InputMaybe<Scalars['Boolean']>;
    L1EchoT2WC_exists?: InputMaybe<Scalars['Boolean']>;
    VelocityComponents_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1REFTENST4KPa_lt?: InputMaybe<Scalars['String']>;
    CIIRES_gt?: InputMaybe<Scalars['String']>;
    MATLABCode_gt?: InputMaybe<Scalars['String']>;
    L1MPST2KPa?: InputMaybe<Scalars['String']>;
    latitude_ne?: InputMaybe<Scalars['String']>;
    private_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1SWW_gte?: InputMaybe<Scalars['String']>;
    master_billed_gallons_gt?: InputMaybe<Scalars['String']>;
    L1MPST1KPa_exists?: InputMaybe<Scalars['Boolean']>;
    date_lt?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    MasssumFiltered_lte?: InputMaybe<Scalars['String']>;
    VelocityComponents_lte?: InputMaybe<Scalars['String']>;
    WellDescriptions_exists?: InputMaybe<Scalars['Boolean']>;
    L1ECT3MSCm?: InputMaybe<Scalars['String']>;
    L1LYW_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ETCorrMm_ne?: InputMaybe<Scalars['String']>;
    PLysFitered_gte?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_gte?: InputMaybe<Scalars['String']>;
    czo_id?: InputMaybe<Scalars['String']>;
    L1LYW_ne?: InputMaybe<Scalars['String']>;
    master_billed_gallons_lt?: InputMaybe<Scalars['String']>;
    ETLysFiltered_ne?: InputMaybe<Scalars['String']>;
    MasssumFiltered_gte?: InputMaybe<Scalars['String']>;
    ETLysFiltered?: InputMaybe<Scalars['String']>;
    latitude_gte?: InputMaybe<Scalars['String']>;
    related_datasets_hs_lt?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_gt?: InputMaybe<Scalars['String']>;
    L1TempT2DegC?: InputMaybe<Scalars['String']>;
    comments_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    VariableDescription_lt?: InputMaybe<Scalars['String']>;
    L1PumpOutS_lte?: InputMaybe<Scalars['String']>;
    PCorrMm_ne?: InputMaybe<Scalars['String']>;
    related_datasets_hs_gte?: InputMaybe<Scalars['String']>;
    res_billed_gallons_ne?: InputMaybe<Scalars['String']>;
    PLysFitered_gt?: InputMaybe<Scalars['String']>;
    city_gt?: InputMaybe<Scalars['String']>;
    population?: InputMaybe<Scalars['String']>;
    PLysFitered_lte?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    longitude_gte?: InputMaybe<Scalars['String']>;
    DateTime_gte?: InputMaybe<Scalars['String']>;
    total_billed_gallons_exists?: InputMaybe<Scalars['Boolean']>;
    P_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ObservedVariables_exists?: InputMaybe<Scalars['Boolean']>;
    longitude_lte?: InputMaybe<Scalars['String']>;
    PIVTimeSeriesImages_ne?: InputMaybe<Scalars['String']>;
    PIVTimeSeriesImages?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_lte?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_gt?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_gt?: InputMaybe<Scalars['String']>;
    Sflux_gt?: InputMaybe<Scalars['String']>;
    PIVTimeSeriesImages_gt?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    comments_ne?: InputMaybe<Scalars['String']>;
    L1SWW_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1REFTENST4KPa?: InputMaybe<Scalars['String']>;
    disciplines_ne?: InputMaybe<Scalars['String']>;
    L1SWW_exists?: InputMaybe<Scalars['Boolean']>;
    variables_gt?: InputMaybe<Scalars['String']>;
    L1MPST1KPa_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DataCollectionMethod_lte?: InputMaybe<Scalars['String']>;
    L1SWW_ne?: InputMaybe<Scalars['String']>;
    ETCorrMm_lt?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_lt?: InputMaybe<Scalars['String']>;
    DataProcessingMethod?: InputMaybe<Scalars['String']>;
    latitude?: InputMaybe<Scalars['String']>;
    L1PumpInS_lte?: InputMaybe<Scalars['String']>;
    VariableDescription_exists?: InputMaybe<Scalars['Boolean']>;
    citation_ne?: InputMaybe<Scalars['String']>;
    comments_lt?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_ne?: InputMaybe<Scalars['String']>;
    Sflux_lte?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_ne?: InputMaybe<Scalars['String']>;
    longitude_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    doi_gt?: InputMaybe<Scalars['String']>;
    US_census_region_gte?: InputMaybe<Scalars['String']>;
    total_billed_gallons_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    related_datasets_hs_lte?: InputMaybe<Scalars['String']>;
    Climate_region?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1PumpOutS_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ETLysFiltered_lte?: InputMaybe<Scalars['String']>;
    L1MPST1KPa_gte?: InputMaybe<Scalars['String']>;
    Description_lte?: InputMaybe<Scalars['String']>;
    SWWFiltered_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1ECT2MSCm_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    city_lt?: InputMaybe<Scalars['String']>;
    L1ECT3MSCm_gt?: InputMaybe<Scalars['String']>;
    L1MPST1KPa?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_lt?: InputMaybe<Scalars['String']>;
    city_ne?: InputMaybe<Scalars['String']>;
    SWWFiltered_gt?: InputMaybe<Scalars['String']>;
    ObservedVariables_ne?: InputMaybe<Scalars['String']>;
    disciplines?: InputMaybe<Scalars['String']>;
    doi_lt?: InputMaybe<Scalars['String']>;
    date?: InputMaybe<Scalars['String']>;
    population_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variables?: InputMaybe<Scalars['String']>;
    DataProcessingMethod_lt?: InputMaybe<Scalars['String']>;
    PCorrMm_gt?: InputMaybe<Scalars['String']>;
    metadata_url_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DateTime?: InputMaybe<Scalars['String']>;
    disciplines_exists?: InputMaybe<Scalars['Boolean']>;
    L1PumpInS_exists?: InputMaybe<Scalars['Boolean']>;
    cii_billed_gallons?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers_ne?: InputMaybe<Scalars['String']>;
    ET_gte?: InputMaybe<Scalars['String']>;
    variables_ne?: InputMaybe<Scalars['String']>;
    L1PumpOutS_gt?: InputMaybe<Scalars['String']>;
    appkey_gt?: InputMaybe<Scalars['String']>;
    url_lte?: InputMaybe<Scalars['String']>;
    DataCollectionMethod_ne?: InputMaybe<Scalars['String']>;
    keywords_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    J_exists?: InputMaybe<Scalars['Boolean']>;
    City_exists?: InputMaybe<Scalars['Boolean']>;
    comments_gte?: InputMaybe<Scalars['String']>;
    variables_gte?: InputMaybe<Scalars['String']>;
    MATLABCode?: InputMaybe<Scalars['String']>;
    latitude_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    appkey_gte?: InputMaybe<Scalars['String']>;
    czos_exists?: InputMaybe<Scalars['Boolean']>;
    PLysFitered_ne?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_lt?: InputMaybe<Scalars['String']>;
    DateTime_gt?: InputMaybe<Scalars['String']>;
    comments_exists?: InputMaybe<Scalars['Boolean']>;
    L1EchoT2WC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    US_census_region_exists?: InputMaybe<Scalars['Boolean']>;
    related_datasets_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    CIIRES?: InputMaybe<Scalars['String']>;
    czo_id_lte?: InputMaybe<Scalars['String']>;
    Columns_gt?: InputMaybe<Scalars['String']>;
    PaperDOI_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    private_exists?: InputMaybe<Scalars['Boolean']>;
    keywords_gt?: InputMaybe<Scalars['String']>;
    subtitle_ne?: InputMaybe<Scalars['String']>;
    ET_lte?: InputMaybe<Scalars['String']>;
    US_census_region_gt?: InputMaybe<Scalars['String']>;
    L1MPST2KPa_ne?: InputMaybe<Scalars['String']>;
    ET_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    res_billed_gallons_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1LYW_gte?: InputMaybe<Scalars['String']>;
    czo_id_ne?: InputMaybe<Scalars['String']>;
    Sflux_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1ECT2MSCm?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    location_lte?: InputMaybe<Scalars['String']>;
    USCensusID_ne?: InputMaybe<Scalars['String']>;
    ETLysFiltered_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    date_exists?: InputMaybe<Scalars['Boolean']>;
    USCensusID_lt?: InputMaybe<Scalars['String']>;
    City?: InputMaybe<Scalars['String']>;
    VelocityComponents_gt?: InputMaybe<Scalars['String']>;
    city_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    total_billed_gallons_lt?: InputMaybe<Scalars['String']>;
    disciplines_lte?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_lt?: InputMaybe<Scalars['String']>;
    VariableDescription_gt?: InputMaybe<Scalars['String']>;
    Description_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    citation_exists?: InputMaybe<Scalars['Boolean']>;
    J_ne?: InputMaybe<Scalars['String']>;
    US_census_region_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Columns_exists?: InputMaybe<Scalars['Boolean']>;
    J_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    US_census_region_lte?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_exists?: InputMaybe<Scalars['Boolean']>;
    disciplines_lt?: InputMaybe<Scalars['String']>;
    czo_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    CIIRES_exists?: InputMaybe<Scalars['Boolean']>;
    L1ECT2MSCm_gte?: InputMaybe<Scalars['String']>;
    related_datasets_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    comments?: InputMaybe<Scalars['String']>;
    Sflux_exists?: InputMaybe<Scalars['Boolean']>;
    master_billed_gallons_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    doi_exists?: InputMaybe<Scalars['Boolean']>;
    CIIRES_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    appkey_lte?: InputMaybe<Scalars['String']>;
    WellDescriptions_gte?: InputMaybe<Scalars['String']>;
    czo_id_gte?: InputMaybe<Scalars['String']>;
    L1EchoT3WC_gt?: InputMaybe<Scalars['String']>;
    VariableDescription_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    res_billed_gallons_gte?: InputMaybe<Scalars['String']>;
    SWWFiltered_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Sflux_lt?: InputMaybe<Scalars['String']>;
    L1SWW?: InputMaybe<Scalars['String']>;
    private_gte?: InputMaybe<Scalars['String']>;
    master_billed_gallons_exists?: InputMaybe<Scalars['Boolean']>;
    PIVTimeSeriesImages_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1REFTENST4KPa_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ETLysFiltered_gte?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_lte?: InputMaybe<Scalars['String']>;
    L1SWW_lt?: InputMaybe<Scalars['String']>;
    doi_ne?: InputMaybe<Scalars['String']>;
    czos_gt?: InputMaybe<Scalars['String']>;
    Columns_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ETCorrMm_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PCorrMm_lt?: InputMaybe<Scalars['String']>;
    L1PumpOutS_lt?: InputMaybe<Scalars['String']>;
    ObservedVariables_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    url_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    metadata_url_ne?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa_gt?: InputMaybe<Scalars['String']>;
    total_billed_gallons_gte?: InputMaybe<Scalars['String']>;
    date_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Climate_region_gte?: InputMaybe<Scalars['String']>;
    latitude_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    location_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PaperDOI_lt?: InputMaybe<Scalars['String']>;
    USCensusID_exists?: InputMaybe<Scalars['Boolean']>;
    L1EchoT1WC_exists?: InputMaybe<Scalars['Boolean']>;
    L1VTENST4KPa_lt?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_exists?: InputMaybe<Scalars['Boolean']>;
    url?: InputMaybe<Scalars['String']>;
    VariableDescription_gte?: InputMaybe<Scalars['String']>;
    PLysFitered?: InputMaybe<Scalars['String']>;
    Columns_ne?: InputMaybe<Scalars['String']>;
    private_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1EchoT3WC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DateTime_exists?: InputMaybe<Scalars['Boolean']>;
    L1ECT1MSCm_gte?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm_exists?: InputMaybe<Scalars['Boolean']>;
    keywords_gte?: InputMaybe<Scalars['String']>;
    city?: InputMaybe<Scalars['String']>;
    date_gt?: InputMaybe<Scalars['String']>;
    url_exists?: InputMaybe<Scalars['Boolean']>;
    Sflux_ne?: InputMaybe<Scalars['String']>;
    population_gt?: InputMaybe<Scalars['String']>;
    L1PumpInS_lt?: InputMaybe<Scalars['String']>;
    MATLABCode_exists?: InputMaybe<Scalars['Boolean']>;
    PlaneIdentifiers_lt?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    City_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    citation_gt?: InputMaybe<Scalars['String']>;
    disciplines_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    location_gt?: InputMaybe<Scalars['String']>;
    czos_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    P_exists?: InputMaybe<Scalars['Boolean']>;
    L1VTENST4KPa_exists?: InputMaybe<Scalars['Boolean']>;
    J_lt?: InputMaybe<Scalars['String']>;
    WellDescriptions_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    ObservedVariables_gte?: InputMaybe<Scalars['String']>;
    City_lt?: InputMaybe<Scalars['String']>;
    Description_ne?: InputMaybe<Scalars['String']>;
    related_datasets_ne?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa_gte?: InputMaybe<Scalars['String']>;
    related_datasets_exists?: InputMaybe<Scalars['Boolean']>;
    L1FieldTempT4DegC_exists?: InputMaybe<Scalars['Boolean']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationAdditional_MetadatumQueryInput>>;
    J_gte?: InputMaybe<Scalars['String']>;
    location_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT2DegC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    PIVTimeSeriesImages_lte?: InputMaybe<Scalars['String']>;
    PLysFitered_lt?: InputMaybe<Scalars['String']>;
    cii_billed_gallons_gte?: InputMaybe<Scalars['String']>;
    appkey_exists?: InputMaybe<Scalars['Boolean']>;
    ETCorrMm?: InputMaybe<Scalars['String']>;
    ETCorrMm_gte?: InputMaybe<Scalars['String']>;
    latitude_lt?: InputMaybe<Scalars['String']>;
    L1MPST3KPa_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    VelocityComponents_ne?: InputMaybe<Scalars['String']>;
    Climate_region_gt?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa?: InputMaybe<Scalars['String']>;
    L1ECT2MSCm_ne?: InputMaybe<Scalars['String']>;
    PaperDOI_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1FieldTempT4DegC_gt?: InputMaybe<Scalars['String']>;
    MATLABCode_gte?: InputMaybe<Scalars['String']>;
    L1SWW_gt?: InputMaybe<Scalars['String']>;
    MasssumFiltered_exists?: InputMaybe<Scalars['Boolean']>;
    L1VTENST4KPa_lte?: InputMaybe<Scalars['String']>;
    L1TempT1DegC_gt?: InputMaybe<Scalars['String']>;
    subtitle_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    location_lt?: InputMaybe<Scalars['String']>;
    L1PumpInS_gt?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm?: InputMaybe<Scalars['String']>;
    L1REFTENST4KPa_exists?: InputMaybe<Scalars['Boolean']>;
    VariableDescription_ne?: InputMaybe<Scalars['String']>;
    VelocityComponents?: InputMaybe<Scalars['String']>;
    US_census_region_ne?: InputMaybe<Scalars['String']>;
    location_ne?: InputMaybe<Scalars['String']>;
    L1TempT3DegC_lt?: InputMaybe<Scalars['String']>;
    Climate_region_lt?: InputMaybe<Scalars['String']>;
    US_census_region_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    WellDescriptions_lte?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    DateTime_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    VelocityComponents_gte?: InputMaybe<Scalars['String']>;
    P_gt?: InputMaybe<Scalars['String']>;
    Sflux_gte?: InputMaybe<Scalars['String']>;
    CIIRES_lte?: InputMaybe<Scalars['String']>;
    City_lte?: InputMaybe<Scalars['String']>;
    L1PumpOutS_ne?: InputMaybe<Scalars['String']>;
    L1LYW_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1MPST1KPa_ne?: InputMaybe<Scalars['String']>;
    city_exists?: InputMaybe<Scalars['Boolean']>;
    population_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Sflux?: InputMaybe<Scalars['String']>;
    doi_gte?: InputMaybe<Scalars['String']>;
    PlaneIdentifiers_gte?: InputMaybe<Scalars['String']>;
    variables_exists?: InputMaybe<Scalars['Boolean']>;
    PIVTimeSeriesImages_exists?: InputMaybe<Scalars['Boolean']>;
    L1REFTENST4KPa_ne?: InputMaybe<Scalars['String']>;
    Climate_region_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1MPST3KPa_gt?: InputMaybe<Scalars['String']>;
    ETLysFiltered_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Description?: InputMaybe<Scalars['String']>;
    czos_gte?: InputMaybe<Scalars['String']>;
    related_datasets_gte?: InputMaybe<Scalars['String']>;
    L1TempT1DegC?: InputMaybe<Scalars['String']>;
    res_billed_gallons_lt?: InputMaybe<Scalars['String']>;
    related_datasets_hs_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1ECT2MSCm_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    czo_id_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    WellDescriptions_lt?: InputMaybe<Scalars['String']>;
    MasssumFiltered_lt?: InputMaybe<Scalars['String']>;
    ObservedVariables_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1MPST1KPa_gt?: InputMaybe<Scalars['String']>;
    VariableDescription_lte?: InputMaybe<Scalars['String']>;
    Columns_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1EchoT3WC_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    MATLABCode_ne?: InputMaybe<Scalars['String']>;
    PLysFitered_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1PumpOutS_gte?: InputMaybe<Scalars['String']>;
    location_exists?: InputMaybe<Scalars['Boolean']>;
    PlaneIdentifiers_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variables_lt?: InputMaybe<Scalars['String']>;
    L1EchoT3WC_lte?: InputMaybe<Scalars['String']>;
    ET_lt?: InputMaybe<Scalars['String']>;
    ObservedVariables?: InputMaybe<Scalars['String']>;
    citation_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    City_gte?: InputMaybe<Scalars['String']>;
    PCorrMm_lte?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_gte?: InputMaybe<Scalars['String']>;
    subtitle_gt?: InputMaybe<Scalars['String']>;
    L1VTENST4KPa_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    city_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    City_ne?: InputMaybe<Scalars['String']>;
    czos?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_lte?: InputMaybe<Scalars['String']>;
    related_datasets_hs_gt?: InputMaybe<Scalars['String']>;
    appkey?: InputMaybe<Scalars['String']>;
    L1SWW_lte?: InputMaybe<Scalars['String']>;
    master_billed_gallons_gte?: InputMaybe<Scalars['String']>;
    City_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    date_ne?: InputMaybe<Scalars['String']>;
    L1EchoT2WC_gte?: InputMaybe<Scalars['String']>;
    L1ECT1MSCm_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    private?: InputMaybe<Scalars['String']>;
    WellDescriptions_ne?: InputMaybe<Scalars['String']>;
    L1EchoT3WC_gte?: InputMaybe<Scalars['String']>;
    PCorrMm_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    Description_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    czo_id_gt?: InputMaybe<Scalars['String']>;
    disciplines_gte?: InputMaybe<Scalars['String']>;
    appkey_ne?: InputMaybe<Scalars['String']>;
    doi_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1TempT1DegC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    citation_gte?: InputMaybe<Scalars['String']>;
    MATLABCode_lte?: InputMaybe<Scalars['String']>;
    P_lte?: InputMaybe<Scalars['String']>;
    ET_exists?: InputMaybe<Scalars['Boolean']>;
    total_billed_gallons_ne?: InputMaybe<Scalars['String']>;
    L1FieldTempT4DegC_gte?: InputMaybe<Scalars['String']>;
    related_datasets_hs?: InputMaybe<Scalars['String']>;
    L1EchoT1WC_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    L1MPST2KPa_lte?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Executed_ByQueryInput = {
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_Executed_ByQueryInput>>;
    model_name?: InputMaybe<Scalars['String']>;
    model_name_gte?: InputMaybe<Scalars['String']>;
    model_name_lt?: InputMaybe<Scalars['String']>;
    model_name_exists?: InputMaybe<Scalars['Boolean']>;
    model_name_gt?: InputMaybe<Scalars['String']>;
    model_name_lte?: InputMaybe<Scalars['String']>;
    model_program_fk_ne?: InputMaybe<Scalars['String']>;
    model_name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    model_program_fk?: InputMaybe<Scalars['String']>;
    model_program_fk_lte?: InputMaybe<Scalars['String']>;
    model_name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    model_program_fk_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_Executed_ByQueryInput>>;
    model_program_fk_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    model_name_ne?: InputMaybe<Scalars['String']>;
    model_program_fk_gte?: InputMaybe<Scalars['String']>;
    model_program_fk_exists?: InputMaybe<Scalars['Boolean']>;
    model_program_fk_gt?: InputMaybe<Scalars['String']>;
    model_program_fk_lt?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationContributorInsertInput = {
    address?: InputMaybe<Scalars['String']>;
    email?: InputMaybe<Scalars['String']>;
    homepage?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    identifiers?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    organization?: InputMaybe<Scalars['String']>;
    phone?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPeriod_CoverageUpdateInput = {
    end?: InputMaybe<Scalars['String']>;
    end_unset?: InputMaybe<Scalars['Boolean']>;
    start?: InputMaybe<Scalars['String']>;
    start_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_Relation_Executed_ByInsertInput = {
    model_program_fk?: InputMaybe<Scalars['String']>;
    model_name?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOri_CoverageInsertInput = {
    _value?: InputMaybe<Scalars['String']>;
    datum?: InputMaybe<Scalars['String']>;
    projection_string_text?: InputMaybe<Scalars['String']>;
    projection_string_type?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_MpmetadatumInsertInput = {
    modelVersion?: InputMaybe<Scalars['String']>;
    modelSoftware?: InputMaybe<Scalars['String']>;
    modelReleaseDate?: InputMaybe<Scalars['String']>;
    modelWebsite?: InputMaybe<Scalars['String']>;
    modelOperatingSystem?: InputMaybe<Scalars['String']>;
    modelCodeRepository?: InputMaybe<Scalars['String']>;
    modelReleaseNotes?: InputMaybe<Scalars['String']>;
    modelProgramLanguage?: InputMaybe<Scalars['String']>;
    modelDocumentation?: InputMaybe<Scalars['String']>;
    modelEngine?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageInsertInput = {
    geometry?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageGeometryInsertInput>;
    type?: InputMaybe<Scalars['String']>;
};

export type Query = {
    __typename?: 'Query';
    geojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
    geojson_checksum_relations: Array<Maybe<Geojson_Checksum_Relation>>;
    title_abstract_search?: Maybe<Array<Maybe<Geojson_Checksum_Relation>>>;
};


export type QueryGeojson_Checksum_RelationArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
};


export type QueryGeojson_Checksum_RelationsArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
    limit?: InputMaybe<Scalars['Int']>;
    sortBy?: InputMaybe<Geojson_Checksum_RelationSortByInput>;
};


export type QueryTitle_Abstract_SearchArgs = {
    input?: InputMaybe<Title_Abstract_Search>;
};

export type Geojson_Checksum_Relation_Model_Output = {
    __typename?: 'Geojson_checksum_relation_model_output';
    includes_output?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFunding_AgencyUpdateInput = {
    fundingAgencyURL_unset?: InputMaybe<Scalars['Boolean']>;
    awardNumber?: InputMaybe<Scalars['String']>;
    awardNumber_unset?: InputMaybe<Scalars['Boolean']>;
    awardTitle?: InputMaybe<Scalars['String']>;
    awardTitle_unset?: InputMaybe<Scalars['Boolean']>;
    fundingAgencyName?: InputMaybe<Scalars['String']>;
    fundingAgencyName_unset?: InputMaybe<Scalars['Boolean']>;
    fundingAgencyURL?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationIdentifierUpdateInput = {
    name?: InputMaybe<Scalars['String']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
    url?: InputMaybe<Scalars['String']>;
    url_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageGeometryUpdateInput = {
    type?: InputMaybe<Scalars['String']>;
    type_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_Relation = {
    __typename?: 'Geojson_checksum_relation';
    _band_information?: Maybe<Geojson_Checksum_Relation_Band_Information>;
    _cell_information?: Maybe<Geojson_Checksum_Relation_Cell_Information>;
    _executed_by?: Maybe<Geojson_Checksum_Relation_Executed_By>;
    _id?: Maybe<Scalars['ObjectId']>;
    _model_output?: Maybe<Geojson_Checksum_Relation_Model_Output>;
    _mpmetadata?: Maybe<Geojson_Checksum_Relation_Mpmetadatum>;
    _ori_coverage?: Maybe<Geojson_Checksum_Relation_Ori_Coverage>;
    abstract?: Maybe<Scalars['String']>;
    additional_metadata?: Maybe<Geojson_Checksum_RelationAdditional_Metadatum>;
    contributors?: Maybe<Array<Maybe<Geojson_Checksum_RelationContributor>>>;
    created?: Maybe<Scalars['String']>;
    creators?: Maybe<Array<Maybe<Geojson_Checksum_RelationCreator>>>;
    fieldinformations?: Maybe<Array<Maybe<Geojson_Checksum_RelationFieldinformation>>>;
    files?: Maybe<Array<Maybe<Geojson_Checksum_RelationFile>>>;
    filter_relations?: Maybe<Array<Maybe<Geojson_Checksum_RelationRelation>>>;
    funding_agencies?: Maybe<Array<Maybe<Geojson_Checksum_RelationFunding_Agency>>>;
    geometryinformations?: Maybe<Array<Maybe<Geojson_Checksum_RelationGeometryinformation>>>;
    id?: Maybe<Scalars['String']>;
    identifiers?: Maybe<Array<Maybe<Geojson_Checksum_RelationIdentifier>>>;
    language?: Maybe<Scalars['String']>;
    modified?: Maybe<Scalars['String']>;
    ori_coverage?: Maybe<Array<Maybe<Geojson_Checksum_RelationOri_Coverage>>>;
    originalcoverages?: Maybe<Array<Maybe<Geojson_Checksum_RelationOriginalcoverage>>>;
    period_coverage?: Maybe<Geojson_Checksum_RelationPeriod_Coverage>;
    published?: Maybe<Scalars['String']>;
    publisher?: Maybe<Geojson_Checksum_RelationPublisher>;
    relations?: Maybe<Array<Maybe<Geojson_Checksum_RelationRelation>>>;
    rights?: Maybe<Geojson_Checksum_RelationRight>;
    spatial_coverage?: Maybe<Geojson_Checksum_RelationSpatial_Coverage>;
    subjects?: Maybe<Array<Maybe<Scalars['String']>>>;
    title?: Maybe<Scalars['String']>;
    type?: Maybe<Scalars['String']>;
    variables?: Maybe<Array<Maybe<Geojson_Checksum_RelationVariable>>>;
};


export type Geojson_Checksum_RelationFilter_RelationsArgs = {
    input?: InputMaybe<Filter_Relation>;
};

export type Geojson_Checksum_RelationPublisher = {
    __typename?: 'Geojson_checksum_relationPublisher';
    publisherName?: Maybe<Scalars['String']>;
    publisherURL?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRelation = {
    __typename?: 'Geojson_checksum_relationRelation';
    relationsResolver?: Maybe<Geojson_Checksum_Relation>;
    type?: Maybe<Scalars['String']>;
    value?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFileQueryInput = {
    mime_type_gt?: InputMaybe<Scalars['String']>;
    mime_type_lt?: InputMaybe<Scalars['String']>;
    path_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    checksum_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    path_exists?: InputMaybe<Scalars['Boolean']>;
    mime_type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    path_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    size_gte?: InputMaybe<Scalars['Int']>;
    checksum_lte?: InputMaybe<Scalars['String']>;
    size_nin?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
    mime_type_lte?: InputMaybe<Scalars['String']>;
    path_ne?: InputMaybe<Scalars['String']>;
    path_lte?: InputMaybe<Scalars['String']>;
    size_in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
    mime_type?: InputMaybe<Scalars['String']>;
    path_gte?: InputMaybe<Scalars['String']>;
    path_lt?: InputMaybe<Scalars['String']>;
    checksum_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    mime_type_gte?: InputMaybe<Scalars['String']>;
    size_ne?: InputMaybe<Scalars['Int']>;
    checksum_gt?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationFileQueryInput>>;
    checksum_exists?: InputMaybe<Scalars['Boolean']>;
    size_exists?: InputMaybe<Scalars['Boolean']>;
    mime_type_ne?: InputMaybe<Scalars['String']>;
    checksum_lt?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationFileQueryInput>>;
    path?: InputMaybe<Scalars['String']>;
    mime_type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    mime_type_exists?: InputMaybe<Scalars['Boolean']>;
    checksum?: InputMaybe<Scalars['String']>;
    checksum_ne?: InputMaybe<Scalars['String']>;
    size_gt?: InputMaybe<Scalars['Int']>;
    path_gt?: InputMaybe<Scalars['String']>;
    size_lte?: InputMaybe<Scalars['Int']>;
    size?: InputMaybe<Scalars['Int']>;
    size_lt?: InputMaybe<Scalars['Int']>;
    checksum_gte?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOri_CoverageQueryInput = {
    _value_lte?: InputMaybe<Scalars['String']>;
    datum_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_text?: InputMaybe<Scalars['String']>;
    projection_string_type_gte?: InputMaybe<Scalars['String']>;
    _value_exists?: InputMaybe<Scalars['Boolean']>;
    _value_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_type_gt?: InputMaybe<Scalars['String']>;
    projection_string_type_lte?: InputMaybe<Scalars['String']>;
    datum_exists?: InputMaybe<Scalars['Boolean']>;
    datum_lte?: InputMaybe<Scalars['String']>;
    projection_string_text_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_type?: InputMaybe<Scalars['String']>;
    datum_gte?: InputMaybe<Scalars['String']>;
    _value?: InputMaybe<Scalars['String']>;
    projection_string_text_gte?: InputMaybe<Scalars['String']>;
    projection_string_text_lt?: InputMaybe<Scalars['String']>;
    _value_lt?: InputMaybe<Scalars['String']>;
    datum_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationOri_CoverageQueryInput>>;
    _value_gt?: InputMaybe<Scalars['String']>;
    datum_lt?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationOri_CoverageQueryInput>>;
    datum_gt?: InputMaybe<Scalars['String']>;
    projection_string_text_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    projection_string_text_exists?: InputMaybe<Scalars['Boolean']>;
    projection_string_type_ne?: InputMaybe<Scalars['String']>;
    datum_ne?: InputMaybe<Scalars['String']>;
    projection_string_text_lte?: InputMaybe<Scalars['String']>;
    projection_string_text_gt?: InputMaybe<Scalars['String']>;
    projection_string_type_lt?: InputMaybe<Scalars['String']>;
    datum?: InputMaybe<Scalars['String']>;
    projection_string_type_exists?: InputMaybe<Scalars['Boolean']>;
    projection_string_type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _value_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _value_ne?: InputMaybe<Scalars['String']>;
    projection_string_type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    _value_gte?: InputMaybe<Scalars['String']>;
    projection_string_text_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Ori_CoverageInsertInput = {
    _value?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageGeometryInsertInput = {
    type?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPeriod_Coverage = {
    __typename?: 'Geojson_checksum_relationPeriod_coverage';
    end?: Maybe<Scalars['String']>;
    start?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPeriod_CoverageInsertInput = {
    end?: InputMaybe<Scalars['String']>;
    start?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFieldinformation = {
    __typename?: 'Geojson_checksum_relationFieldinformation';
    fieldName?: Maybe<Scalars['String']>;
    fieldPrecision?: Maybe<Scalars['String']>;
    fieldType?: Maybe<Scalars['String']>;
    fieldTypeCode?: Maybe<Scalars['String']>;
    fieldWidth?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Band_Information = {
    __typename?: 'Geojson_checksum_relation_band_information';
    comment?: Maybe<Scalars['String']>;
    maximumValue?: Maybe<Scalars['String']>;
    method?: Maybe<Scalars['String']>;
    minimumValue?: Maybe<Scalars['String']>;
    name?: Maybe<Scalars['String']>;
    noDataValue?: Maybe<Scalars['String']>;
    variableName?: Maybe<Scalars['String']>;
    variableUnit?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Cell_Information = {
    __typename?: 'Geojson_checksum_relation_cell_information';
    cellDataType?: Maybe<Scalars['String']>;
    cellSizeXValue?: Maybe<Scalars['String']>;
    cellSizeYValue?: Maybe<Scalars['String']>;
    columns?: Maybe<Scalars['String']>;
    name?: Maybe<Scalars['String']>;
    rows?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRightQueryInput = {
    URL_gte?: InputMaybe<Scalars['String']>;
    rightsStatement_gte?: InputMaybe<Scalars['String']>;
    URL_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rightsStatement?: InputMaybe<Scalars['String']>;
    rightsStatement_gt?: InputMaybe<Scalars['String']>;
    rightsStatement_exists?: InputMaybe<Scalars['Boolean']>;
    rightsStatement_lt?: InputMaybe<Scalars['String']>;
    rightsStatement_ne?: InputMaybe<Scalars['String']>;
    URL?: InputMaybe<Scalars['String']>;
    URL_lt?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationRightQueryInput>>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationRightQueryInput>>;
    URL_gt?: InputMaybe<Scalars['String']>;
    URL_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rightsStatement_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    URL_lte?: InputMaybe<Scalars['String']>;
    URL_exists?: InputMaybe<Scalars['Boolean']>;
    rightsStatement_lte?: InputMaybe<Scalars['String']>;
    rightsStatement_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    URL_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationOriginalcoverage = {
    __typename?: 'Geojson_checksum_relationOriginalcoverage';
    datum?: Maybe<Scalars['String']>;
    eastlimit?: Maybe<Scalars['String']>;
    northlimit?: Maybe<Scalars['String']>;
    projection_name?: Maybe<Scalars['String']>;
    projection_string?: Maybe<Scalars['String']>;
    southlimit?: Maybe<Scalars['String']>;
    unit?: Maybe<Scalars['String']>;
    westlimit?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationFunding_AgencyInsertInput = {
    awardTitle?: InputMaybe<Scalars['String']>;
    fundingAgencyName?: InputMaybe<Scalars['String']>;
    fundingAgencyURL?: InputMaybe<Scalars['String']>;
    awardNumber?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Band_InformationQueryInput = {
    comment_lte?: InputMaybe<Scalars['String']>;
    comment_ne?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_Band_InformationQueryInput>>;
    minimumValue_lt?: InputMaybe<Scalars['String']>;
    noDataValue_lte?: InputMaybe<Scalars['String']>;
    variableUnit?: InputMaybe<Scalars['String']>;
    minimumValue_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_lte?: InputMaybe<Scalars['String']>;
    maximumValue_gte?: InputMaybe<Scalars['String']>;
    name_gt?: InputMaybe<Scalars['String']>;
    minimumValue_lte?: InputMaybe<Scalars['String']>;
    maximumValue_lt?: InputMaybe<Scalars['String']>;
    minimumValue_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    minimumValue_gt?: InputMaybe<Scalars['String']>;
    variableName_exists?: InputMaybe<Scalars['Boolean']>;
    comment_lt?: InputMaybe<Scalars['String']>;
    comment_gte?: InputMaybe<Scalars['String']>;
    variableUnit_ne?: InputMaybe<Scalars['String']>;
    comment?: InputMaybe<Scalars['String']>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    minimumValue_exists?: InputMaybe<Scalars['Boolean']>;
    noDataValue_ne?: InputMaybe<Scalars['String']>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variableUnit_gt?: InputMaybe<Scalars['String']>;
    variableUnit_gte?: InputMaybe<Scalars['String']>;
    variableName_gt?: InputMaybe<Scalars['String']>;
    variableName?: InputMaybe<Scalars['String']>;
    comment_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_Band_InformationQueryInput>>;
    maximumValue_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variableName_lte?: InputMaybe<Scalars['String']>;
    maximumValue_exists?: InputMaybe<Scalars['Boolean']>;
    noDataValue?: InputMaybe<Scalars['String']>;
    method_lte?: InputMaybe<Scalars['String']>;
    minimumValue_gte?: InputMaybe<Scalars['String']>;
    method_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_lt?: InputMaybe<Scalars['String']>;
    comment_gt?: InputMaybe<Scalars['String']>;
    method_lt?: InputMaybe<Scalars['String']>;
    maximumValue_ne?: InputMaybe<Scalars['String']>;
    variableUnit_exists?: InputMaybe<Scalars['Boolean']>;
    method_gt?: InputMaybe<Scalars['String']>;
    variableName_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    noDataValue_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    maximumValue_lte?: InputMaybe<Scalars['String']>;
    noDataValue_gte?: InputMaybe<Scalars['String']>;
    comment_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variableName_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    method_gte?: InputMaybe<Scalars['String']>;
    noDataValue_lt?: InputMaybe<Scalars['String']>;
    variableName_gte?: InputMaybe<Scalars['String']>;
    method_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_gte?: InputMaybe<Scalars['String']>;
    minimumValue?: InputMaybe<Scalars['String']>;
    noDataValue_exists?: InputMaybe<Scalars['Boolean']>;
    method?: InputMaybe<Scalars['String']>;
    variableName_lt?: InputMaybe<Scalars['String']>;
    maximumValue_gt?: InputMaybe<Scalars['String']>;
    variableUnit_lt?: InputMaybe<Scalars['String']>;
    variableName_ne?: InputMaybe<Scalars['String']>;
    noDataValue_gt?: InputMaybe<Scalars['String']>;
    name_ne?: InputMaybe<Scalars['String']>;
    minimumValue_ne?: InputMaybe<Scalars['String']>;
    noDataValue_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variableUnit_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    maximumValue?: InputMaybe<Scalars['String']>;
    variableUnit_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    method_exists?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    variableUnit_lte?: InputMaybe<Scalars['String']>;
    maximumValue_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    comment_exists?: InputMaybe<Scalars['Boolean']>;
    method_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_Coverage = {
    __typename?: 'Geojson_checksum_relationSpatial_coverage';
    geometry?: Maybe<Geojson_Checksum_RelationSpatial_CoverageGeometry>;
    type?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRightInsertInput = {
    URL?: InputMaybe<Scalars['String']>;
    rightsStatement?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Band_InformationInsertInput = {
    variableUnit?: InputMaybe<Scalars['String']>;
    comment?: InputMaybe<Scalars['String']>;
    maximumValue?: InputMaybe<Scalars['String']>;
    method?: InputMaybe<Scalars['String']>;
    minimumValue?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    noDataValue?: InputMaybe<Scalars['String']>;
    variableName?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageQueryInput = {
    OR?: InputMaybe<Array<Geojson_Checksum_RelationSpatial_CoverageQueryInput>>;
    geometry?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageGeometryQueryInput>;
    type_exists?: InputMaybe<Scalars['Boolean']>;
    type_gt?: InputMaybe<Scalars['String']>;
    type_gte?: InputMaybe<Scalars['String']>;
    type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    geometry_exists?: InputMaybe<Scalars['Boolean']>;
    type?: InputMaybe<Scalars['String']>;
    type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type_lt?: InputMaybe<Scalars['String']>;
    type_lte?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationSpatial_CoverageQueryInput>>;
    type_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationGeometryinformationUpdateInput = {
    featureCount?: InputMaybe<Scalars['String']>;
    featureCount_unset?: InputMaybe<Scalars['Boolean']>;
    geometryType?: InputMaybe<Scalars['String']>;
    geometryType_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationOri_CoverageUpdateInput = {
    datum_unset?: InputMaybe<Scalars['Boolean']>;
    projection_string_text?: InputMaybe<Scalars['String']>;
    projection_string_text_unset?: InputMaybe<Scalars['Boolean']>;
    projection_string_type?: InputMaybe<Scalars['String']>;
    projection_string_type_unset?: InputMaybe<Scalars['Boolean']>;
    _value?: InputMaybe<Scalars['String']>;
    _value_unset?: InputMaybe<Scalars['Boolean']>;
    datum?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationIdentifierInsertInput = {
    name?: InputMaybe<Scalars['String']>;
    url?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageGeometry = {
    __typename?: 'Geojson_checksum_relationSpatial_coverageGeometry';
    type?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationGeometryinformationInsertInput = {
    featureCount?: InputMaybe<Scalars['String']>;
    geometryType?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationUpdateInput = {
    type_unset?: InputMaybe<Scalars['Boolean']>;
    creators?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationCreatorUpdateInput>>>;
    _model_output?: InputMaybe<Geojson_Checksum_Relation_Model_OutputUpdateInput>;
    _mpmetadata?: InputMaybe<Geojson_Checksum_Relation_MpmetadatumUpdateInput>;
    relations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationRelationUpdateInput>>>;
    additional_metadata_unset?: InputMaybe<Scalars['Boolean']>;
    variables?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationVariableUpdateInput>>>;
    rights?: InputMaybe<Geojson_Checksum_RelationRightUpdateInput>;
    originalcoverages_unset?: InputMaybe<Scalars['Boolean']>;
    subjects?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    id_unset?: InputMaybe<Scalars['Boolean']>;
    identifiers?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationIdentifierUpdateInput>>>;
    originalcoverages?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOriginalcoverageUpdateInput>>>;
    _id?: InputMaybe<Scalars['ObjectId']>;
    _executed_by?: InputMaybe<Geojson_Checksum_Relation_Executed_ByUpdateInput>;
    spatial_coverage?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageUpdateInput>;
    period_coverage_unset?: InputMaybe<Scalars['Boolean']>;
    fieldinformations_unset?: InputMaybe<Scalars['Boolean']>;
    fieldinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFieldinformationUpdateInput>>>;
    geometryinformations_unset?: InputMaybe<Scalars['Boolean']>;
    contributors_unset?: InputMaybe<Scalars['Boolean']>;
    geometryinformations?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationGeometryinformationUpdateInput>>>;
    modified?: InputMaybe<Scalars['String']>;
    _id_unset?: InputMaybe<Scalars['Boolean']>;
    publisher_unset?: InputMaybe<Scalars['Boolean']>;
    funding_agencies_unset?: InputMaybe<Scalars['Boolean']>;
    variables_unset?: InputMaybe<Scalars['Boolean']>;
    period_coverage?: InputMaybe<Geojson_Checksum_RelationPeriod_CoverageUpdateInput>;
    identifiers_unset?: InputMaybe<Scalars['Boolean']>;
    _band_information_unset?: InputMaybe<Scalars['Boolean']>;
    spatial_coverage_unset?: InputMaybe<Scalars['Boolean']>;
    _ori_coverage?: InputMaybe<Geojson_Checksum_Relation_Ori_CoverageUpdateInput>;
    funding_agencies?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFunding_AgencyUpdateInput>>>;
    relations_unset?: InputMaybe<Scalars['Boolean']>;
    id?: InputMaybe<Scalars['String']>;
    _ori_coverage_unset?: InputMaybe<Scalars['Boolean']>;
    _cell_information_unset?: InputMaybe<Scalars['Boolean']>;
    _mpmetadata_unset?: InputMaybe<Scalars['Boolean']>;
    _band_information?: InputMaybe<Geojson_Checksum_Relation_Band_InformationUpdateInput>;
    creators_unset?: InputMaybe<Scalars['Boolean']>;
    title?: InputMaybe<Scalars['String']>;
    abstract?: InputMaybe<Scalars['String']>;
    language_unset?: InputMaybe<Scalars['Boolean']>;
    files_unset?: InputMaybe<Scalars['Boolean']>;
    ori_coverage_unset?: InputMaybe<Scalars['Boolean']>;
    modified_unset?: InputMaybe<Scalars['Boolean']>;
    subjects_unset?: InputMaybe<Scalars['Boolean']>;
    type?: InputMaybe<Scalars['String']>;
    _cell_information?: InputMaybe<Geojson_Checksum_Relation_Cell_InformationUpdateInput>;
    _executed_by_unset?: InputMaybe<Scalars['Boolean']>;
    created_unset?: InputMaybe<Scalars['Boolean']>;
    abstract_unset?: InputMaybe<Scalars['Boolean']>;
    language?: InputMaybe<Scalars['String']>;
    published_unset?: InputMaybe<Scalars['Boolean']>;
    contributors?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationContributorUpdateInput>>>;
    publisher?: InputMaybe<Geojson_Checksum_RelationPublisherUpdateInput>;
    rights_unset?: InputMaybe<Scalars['Boolean']>;
    files?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationFileUpdateInput>>>;
    additional_metadata?: InputMaybe<Geojson_Checksum_RelationAdditional_MetadatumUpdateInput>;
    ori_coverage?: InputMaybe<Array<InputMaybe<Geojson_Checksum_RelationOri_CoverageUpdateInput>>>;
    published?: InputMaybe<Scalars['String']>;
    _model_output_unset?: InputMaybe<Scalars['Boolean']>;
    created?: InputMaybe<Scalars['String']>;
    title_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_Relation_Band_InformationUpdateInput = {
    method?: InputMaybe<Scalars['String']>;
    variableUnit_unset?: InputMaybe<Scalars['Boolean']>;
    noDataValue?: InputMaybe<Scalars['String']>;
    comment?: InputMaybe<Scalars['String']>;
    maximumValue_unset?: InputMaybe<Scalars['Boolean']>;
    noDataValue_unset?: InputMaybe<Scalars['Boolean']>;
    maximumValue?: InputMaybe<Scalars['String']>;
    method_unset?: InputMaybe<Scalars['Boolean']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
    minimumValue?: InputMaybe<Scalars['String']>;
    variableUnit?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    variableName_unset?: InputMaybe<Scalars['Boolean']>;
    comment_unset?: InputMaybe<Scalars['Boolean']>;
    variableName?: InputMaybe<Scalars['String']>;
    minimumValue_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationOri_Coverage = {
    __typename?: 'Geojson_checksum_relationOri_coverage';
    _value?: Maybe<Scalars['String']>;
    datum?: Maybe<Scalars['String']>;
    projection_string_text?: Maybe<Scalars['String']>;
    projection_string_type?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageUpdateInput = {
    geometry_unset?: InputMaybe<Scalars['Boolean']>;
    type?: InputMaybe<Scalars['String']>;
    type_unset?: InputMaybe<Scalars['Boolean']>;
    geometry?: InputMaybe<Geojson_Checksum_RelationSpatial_CoverageGeometryUpdateInput>;
};

export type Title_Abstract_Search = {
    term: Scalars['String'];
    limit?: InputMaybe<Scalars['Float']>;
};

export type InsertManyPayload = {
    __typename?: 'InsertManyPayload';
    insertedIds: Array<Maybe<Scalars['ObjectId']>>;
};

export type Geojson_Checksum_Relation_Mpmetadatum = {
    __typename?: 'Geojson_checksum_relation_mpmetadatum';
    modelCodeRepository?: Maybe<Scalars['String']>;
    modelDocumentation?: Maybe<Scalars['String']>;
    modelEngine?: Maybe<Scalars['String']>;
    modelOperatingSystem?: Maybe<Scalars['String']>;
    modelProgramLanguage?: Maybe<Scalars['String']>;
    modelReleaseDate?: Maybe<Scalars['String']>;
    modelReleaseNotes?: Maybe<Scalars['String']>;
    modelSoftware?: Maybe<Scalars['String']>;
    modelVersion?: Maybe<Scalars['String']>;
    modelWebsite?: Maybe<Scalars['String']>;
};

export type Filter_Relation = {
    types: Array<InputMaybe<Scalars['String']>>;
};

export type Geojson_Checksum_Relation_Ori_CoverageQueryInput = {
    _value_exists?: InputMaybe<Scalars['Boolean']>;
    _value_ne?: InputMaybe<Scalars['String']>;
    _value_gt?: InputMaybe<Scalars['String']>;
    _value_lt?: InputMaybe<Scalars['String']>;
    _value_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_Ori_CoverageQueryInput>>;
    _value_gte?: InputMaybe<Scalars['String']>;
    _value_lte?: InputMaybe<Scalars['String']>;
    _value?: InputMaybe<Scalars['String']>;
    _value_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_Ori_CoverageQueryInput>>;
};

export type Geojson_Checksum_RelationFunding_AgencyQueryInput = {
    awardTitle?: InputMaybe<Scalars['String']>;
    fundingAgencyName?: InputMaybe<Scalars['String']>;
    fundingAgencyName_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fundingAgencyName_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fundingAgencyName_exists?: InputMaybe<Scalars['Boolean']>;
    awardNumber_lt?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_gte?: InputMaybe<Scalars['String']>;
    awardTitle_ne?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    awardTitle_gt?: InputMaybe<Scalars['String']>;
    awardNumber_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    awardTitle_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fundingAgencyName_lte?: InputMaybe<Scalars['String']>;
    awardNumber_ne?: InputMaybe<Scalars['String']>;
    awardTitle_lt?: InputMaybe<Scalars['String']>;
    awardNumber_lte?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_lte?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    awardNumber_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    fundingAgencyURL_gt?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_exists?: InputMaybe<Scalars['Boolean']>;
    awardTitle_lte?: InputMaybe<Scalars['String']>;
    fundingAgencyName_lt?: InputMaybe<Scalars['String']>;
    awardNumber_gt?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_lt?: InputMaybe<Scalars['String']>;
    awardTitle_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationFunding_AgencyQueryInput>>;
    awardNumber?: InputMaybe<Scalars['String']>;
    fundingAgencyName_gte?: InputMaybe<Scalars['String']>;
    fundingAgencyURL_ne?: InputMaybe<Scalars['String']>;
    fundingAgencyURL?: InputMaybe<Scalars['String']>;
    fundingAgencyName_ne?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationFunding_AgencyQueryInput>>;
    awardNumber_exists?: InputMaybe<Scalars['Boolean']>;
    fundingAgencyName_gt?: InputMaybe<Scalars['String']>;
    awardTitle_exists?: InputMaybe<Scalars['Boolean']>;
    awardNumber_gte?: InputMaybe<Scalars['String']>;
    awardTitle_gte?: InputMaybe<Scalars['String']>;
};

export type Mutation = {
    __typename?: 'Mutation';
    deleteManyGeojson_checksum_relations?: Maybe<DeleteManyPayload>;
    deleteOneGeojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
    insertManyGeojson_checksum_relations?: Maybe<InsertManyPayload>;
    insertOneGeojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
    replaceOneGeojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
    updateManyGeojson_checksum_relations?: Maybe<UpdateManyPayload>;
    updateOneGeojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
    upsertOneGeojson_checksum_relation?: Maybe<Geojson_Checksum_Relation>;
};


export type MutationDeleteManyGeojson_Checksum_RelationsArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
};


export type MutationDeleteOneGeojson_Checksum_RelationArgs = {
    query: Geojson_Checksum_RelationQueryInput;
};


export type MutationInsertManyGeojson_Checksum_RelationsArgs = {
    data: Array<Geojson_Checksum_RelationInsertInput>;
};


export type MutationInsertOneGeojson_Checksum_RelationArgs = {
    data: Geojson_Checksum_RelationInsertInput;
};


export type MutationReplaceOneGeojson_Checksum_RelationArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
    data: Geojson_Checksum_RelationInsertInput;
};


export type MutationUpdateManyGeojson_Checksum_RelationsArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
    set: Geojson_Checksum_RelationUpdateInput;
};


export type MutationUpdateOneGeojson_Checksum_RelationArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
    set: Geojson_Checksum_RelationUpdateInput;
};


export type MutationUpsertOneGeojson_Checksum_RelationArgs = {
    query?: InputMaybe<Geojson_Checksum_RelationQueryInput>;
    data: Geojson_Checksum_RelationInsertInput;
};

export type Geojson_Checksum_Relation_Model_OutputUpdateInput = {
    includes_output?: InputMaybe<Scalars['String']>;
    includes_output_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_Relation_MpmetadatumUpdateInput = {
    modelOperatingSystem_unset?: InputMaybe<Scalars['Boolean']>;
    modelReleaseNotes?: InputMaybe<Scalars['String']>;
    modelProgramLanguage?: InputMaybe<Scalars['String']>;
    modelSoftware_unset?: InputMaybe<Scalars['Boolean']>;
    modelWebsite?: InputMaybe<Scalars['String']>;
    modelCodeRepository?: InputMaybe<Scalars['String']>;
    modelReleaseDate_unset?: InputMaybe<Scalars['Boolean']>;
    modelVersion_unset?: InputMaybe<Scalars['Boolean']>;
    modelVersion?: InputMaybe<Scalars['String']>;
    modelProgramLanguage_unset?: InputMaybe<Scalars['Boolean']>;
    modelOperatingSystem?: InputMaybe<Scalars['String']>;
    modelReleaseDate?: InputMaybe<Scalars['String']>;
    modelDocumentation?: InputMaybe<Scalars['String']>;
    modelReleaseNotes_unset?: InputMaybe<Scalars['Boolean']>;
    modelEngine?: InputMaybe<Scalars['String']>;
    modelWebsite_unset?: InputMaybe<Scalars['Boolean']>;
    modelEngine_unset?: InputMaybe<Scalars['Boolean']>;
    modelSoftware?: InputMaybe<Scalars['String']>;
    modelDocumentation_unset?: InputMaybe<Scalars['Boolean']>;
    modelCodeRepository_unset?: InputMaybe<Scalars['Boolean']>;
};

export type UpdateManyPayload = {
    __typename?: 'UpdateManyPayload';
    matchedCount: Scalars['Int'];
    modifiedCount: Scalars['Int'];
};

export type Geojson_Checksum_RelationContributorQueryInput = {
    identifiers_gt?: InputMaybe<Scalars['String']>;
    homepage_ne?: InputMaybe<Scalars['String']>;
    email_ne?: InputMaybe<Scalars['String']>;
    address_gt?: InputMaybe<Scalars['String']>;
    email_exists?: InputMaybe<Scalars['Boolean']>;
    name_ne?: InputMaybe<Scalars['String']>;
    identifiers_lte?: InputMaybe<Scalars['String']>;
    organization_ne?: InputMaybe<Scalars['String']>;
    organization?: InputMaybe<Scalars['String']>;
    identifiers_ne?: InputMaybe<Scalars['String']>;
    organization_exists?: InputMaybe<Scalars['Boolean']>;
    phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    identifiers_exists?: InputMaybe<Scalars['Boolean']>;
    phone_gt?: InputMaybe<Scalars['String']>;
    homepage_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    hydroshare_user_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    identifiers_gte?: InputMaybe<Scalars['String']>;
    phone_ne?: InputMaybe<Scalars['String']>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    address_exists?: InputMaybe<Scalars['Boolean']>;
    homepage_lte?: InputMaybe<Scalars['String']>;
    address_lt?: InputMaybe<Scalars['String']>;
    phone_exists?: InputMaybe<Scalars['Boolean']>;
    email_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    email_gte?: InputMaybe<Scalars['String']>;
    address_gte?: InputMaybe<Scalars['String']>;
    address_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_gt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_lt?: InputMaybe<Scalars['String']>;
    address_ne?: InputMaybe<Scalars['String']>;
    homepage_exists?: InputMaybe<Scalars['Boolean']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationContributorQueryInput>>;
    organization_gte?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_exists?: InputMaybe<Scalars['Boolean']>;
    identifiers_lt?: InputMaybe<Scalars['String']>;
    email_lt?: InputMaybe<Scalars['String']>;
    phone_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    identifiers_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    phone_lt?: InputMaybe<Scalars['String']>;
    phone?: InputMaybe<Scalars['String']>;
    email_gt?: InputMaybe<Scalars['String']>;
    homepage_gt?: InputMaybe<Scalars['String']>;
    name_lte?: InputMaybe<Scalars['String']>;
    identifiers_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    homepage_gte?: InputMaybe<Scalars['String']>;
    organization_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    hydroshare_user_id_gt?: InputMaybe<Scalars['String']>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    homepage_lt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_gte?: InputMaybe<Scalars['String']>;
    phone_gte?: InputMaybe<Scalars['String']>;
    address_lte?: InputMaybe<Scalars['String']>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    address?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationContributorQueryInput>>;
    email?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_lte?: InputMaybe<Scalars['String']>;
    name_gt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    phone_lte?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    organization_lt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    name_gte?: InputMaybe<Scalars['String']>;
    organization_lte?: InputMaybe<Scalars['String']>;
    email_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    homepage?: InputMaybe<Scalars['String']>;
    address_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    hydroshare_user_id_ne?: InputMaybe<Scalars['String']>;
    name_lt?: InputMaybe<Scalars['String']>;
    homepage_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    email_lte?: InputMaybe<Scalars['String']>;
    identifiers?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationGeometryinformationQueryInput = {
    geometryType_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    geometryType_lte?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationGeometryinformationQueryInput>>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationGeometryinformationQueryInput>>;
    featureCount?: InputMaybe<Scalars['String']>;
    featureCount_lte?: InputMaybe<Scalars['String']>;
    featureCount_gt?: InputMaybe<Scalars['String']>;
    geometryType_ne?: InputMaybe<Scalars['String']>;
    featureCount_ne?: InputMaybe<Scalars['String']>;
    geometryType_gt?: InputMaybe<Scalars['String']>;
    geometryType?: InputMaybe<Scalars['String']>;
    geometryType_lt?: InputMaybe<Scalars['String']>;
    featureCount_gte?: InputMaybe<Scalars['String']>;
    featureCount_exists?: InputMaybe<Scalars['Boolean']>;
    geometryType_gte?: InputMaybe<Scalars['String']>;
    featureCount_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    geometryType_exists?: InputMaybe<Scalars['Boolean']>;
    featureCount_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    geometryType_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    featureCount_lt?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRelationInsertInput = {
    type?: InputMaybe<Scalars['String']>;
    value?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_Relation_Model_OutputQueryInput = {
    includes_output?: InputMaybe<Scalars['String']>;
    includes_output_gt?: InputMaybe<Scalars['String']>;
    includes_output_gte?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_Model_OutputQueryInput>>;
    includes_output_lt?: InputMaybe<Scalars['String']>;
    includes_output_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    includes_output_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_Model_OutputQueryInput>>;
    includes_output_lte?: InputMaybe<Scalars['String']>;
    includes_output_exists?: InputMaybe<Scalars['Boolean']>;
    includes_output_ne?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationPublisherQueryInput = {
    OR?: InputMaybe<Array<Geojson_Checksum_RelationPublisherQueryInput>>;
    publisherName_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    publisherName_gt?: InputMaybe<Scalars['String']>;
    publisherURL_exists?: InputMaybe<Scalars['Boolean']>;
    publisherURL_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    publisherURL_gt?: InputMaybe<Scalars['String']>;
    publisherName_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    publisherURL_lt?: InputMaybe<Scalars['String']>;
    publisherURL?: InputMaybe<Scalars['String']>;
    publisherURL_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    publisherName_gte?: InputMaybe<Scalars['String']>;
    publisherURL_gte?: InputMaybe<Scalars['String']>;
    publisherName_ne?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationPublisherQueryInput>>;
    publisherName_exists?: InputMaybe<Scalars['Boolean']>;
    publisherName_lt?: InputMaybe<Scalars['String']>;
    publisherURL_ne?: InputMaybe<Scalars['String']>;
    publisherName?: InputMaybe<Scalars['String']>;
    publisherName_lte?: InputMaybe<Scalars['String']>;
    publisherURL_lte?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationVariableInsertInput = {
    unit?: InputMaybe<Scalars['String']>;
    descriptive_name?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    shape?: InputMaybe<Scalars['String']>;
    type?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRelationQueryInput = {
    type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    value_gte?: InputMaybe<Scalars['String']>;
    value?: InputMaybe<Scalars['String']>;
    value_lte?: InputMaybe<Scalars['String']>;
    type_gt?: InputMaybe<Scalars['String']>;
    value_gt?: InputMaybe<Scalars['String']>;
    value_lt?: InputMaybe<Scalars['String']>;
    value_exists?: InputMaybe<Scalars['Boolean']>;
    type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type_gte?: InputMaybe<Scalars['String']>;
    value_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationRelationQueryInput>>;
    type_exists?: InputMaybe<Scalars['Boolean']>;
    type_ne?: InputMaybe<Scalars['String']>;
    type_lte?: InputMaybe<Scalars['String']>;
    value_ne?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationRelationQueryInput>>;
    type_lt?: InputMaybe<Scalars['String']>;
    value_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Geojson_Checksum_Relation_Cell_InformationQueryInput = {
    cellSizeXValue_gt?: InputMaybe<Scalars['String']>;
    name_ne?: InputMaybe<Scalars['String']>;
    cellSizeXValue_ne?: InputMaybe<Scalars['String']>;
    rows_ne?: InputMaybe<Scalars['String']>;
    cellDataType?: InputMaybe<Scalars['String']>;
    name_lt?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    cellSizeXValue?: InputMaybe<Scalars['String']>;
    cellSizeYValue_exists?: InputMaybe<Scalars['Boolean']>;
    cellSizeYValue_lt?: InputMaybe<Scalars['String']>;
    columns_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    cellSizeYValue?: InputMaybe<Scalars['String']>;
    cellDataType_exists?: InputMaybe<Scalars['Boolean']>;
    cellDataType_gte?: InputMaybe<Scalars['String']>;
    rows_lte?: InputMaybe<Scalars['String']>;
    cellDataType_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    columns_exists?: InputMaybe<Scalars['Boolean']>;
    cellSizeYValue_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    columns_ne?: InputMaybe<Scalars['String']>;
    cellSizeXValue_lt?: InputMaybe<Scalars['String']>;
    cellDataType_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rows_lt?: InputMaybe<Scalars['String']>;
    columns?: InputMaybe<Scalars['String']>;
    cellSizeYValue_lte?: InputMaybe<Scalars['String']>;
    rows_gt?: InputMaybe<Scalars['String']>;
    cellSizeYValue_ne?: InputMaybe<Scalars['String']>;
    rows_exists?: InputMaybe<Scalars['Boolean']>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    columns_lt?: InputMaybe<Scalars['String']>;
    cellDataType_ne?: InputMaybe<Scalars['String']>;
    name_gt?: InputMaybe<Scalars['String']>;
    rows_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    OR?: InputMaybe<Array<Geojson_Checksum_Relation_Cell_InformationQueryInput>>;
    cellSizeXValue_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rows_gte?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_Relation_Cell_InformationQueryInput>>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rows?: InputMaybe<Scalars['String']>;
    cellSizeYValue_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    columns_gte?: InputMaybe<Scalars['String']>;
    cellSizeXValue_gte?: InputMaybe<Scalars['String']>;
    cellSizeYValue_gte?: InputMaybe<Scalars['String']>;
    cellSizeYValue_gt?: InputMaybe<Scalars['String']>;
    name_lte?: InputMaybe<Scalars['String']>;
    columns_lte?: InputMaybe<Scalars['String']>;
    columns_gt?: InputMaybe<Scalars['String']>;
    columns_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    cellSizeXValue_lte?: InputMaybe<Scalars['String']>;
    cellSizeXValue_exists?: InputMaybe<Scalars['Boolean']>;
    cellDataType_lt?: InputMaybe<Scalars['String']>;
    cellSizeXValue_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    rows_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_gte?: InputMaybe<Scalars['String']>;
    cellDataType_gt?: InputMaybe<Scalars['String']>;
    cellDataType_lte?: InputMaybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationRight = {
    __typename?: 'Geojson_checksum_relationRight';
    URL?: Maybe<Scalars['String']>;
    rightsStatement?: Maybe<Scalars['String']>;
};

export type Geojson_Checksum_RelationVariableUpdateInput = {
    name?: InputMaybe<Scalars['String']>;
    unit?: InputMaybe<Scalars['String']>;
    shape?: InputMaybe<Scalars['String']>;
    shape_unset?: InputMaybe<Scalars['Boolean']>;
    type_unset?: InputMaybe<Scalars['Boolean']>;
    name_unset?: InputMaybe<Scalars['Boolean']>;
    unit_unset?: InputMaybe<Scalars['Boolean']>;
    type?: InputMaybe<Scalars['String']>;
    descriptive_name?: InputMaybe<Scalars['String']>;
    descriptive_name_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationRightUpdateInput = {
    URL?: InputMaybe<Scalars['String']>;
    URL_unset?: InputMaybe<Scalars['Boolean']>;
    rightsStatement?: InputMaybe<Scalars['String']>;
    rightsStatement_unset?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationCreatorQueryInput = {
    creatorOrder_gte?: InputMaybe<Scalars['String']>;
    email_exists?: InputMaybe<Scalars['Boolean']>;
    homepage_gt?: InputMaybe<Scalars['String']>;
    identifiers_gt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_exists?: InputMaybe<Scalars['Boolean']>;
    homepage_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    address_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_gte?: InputMaybe<Scalars['String']>;
    address_gt?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    organization?: InputMaybe<Scalars['String']>;
    address_lte?: InputMaybe<Scalars['String']>;
    phone_ne?: InputMaybe<Scalars['String']>;
    email_ne?: InputMaybe<Scalars['String']>;
    phone_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    creatorOrder_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    address?: InputMaybe<Scalars['String']>;
    identifiers_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    phone_gt?: InputMaybe<Scalars['String']>;
    name_gte?: InputMaybe<Scalars['String']>;
    identifiers_lt?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationCreatorQueryInput>>;
    email_lt?: InputMaybe<Scalars['String']>;
    organization_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    identifiers_ne?: InputMaybe<Scalars['String']>;
    address_ne?: InputMaybe<Scalars['String']>;
    homepage_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_exists?: InputMaybe<Scalars['Boolean']>;
    email?: InputMaybe<Scalars['String']>;
    homepage_lte?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_lte?: InputMaybe<Scalars['String']>;
    creatorOrder_ne?: InputMaybe<Scalars['String']>;
    email_gte?: InputMaybe<Scalars['String']>;
    name_lt?: InputMaybe<Scalars['String']>;
    address_lt?: InputMaybe<Scalars['String']>;
    address_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    hydroshare_user_id_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    email_gt?: InputMaybe<Scalars['String']>;
    identifiers_exists?: InputMaybe<Scalars['Boolean']>;
    creatorOrder_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    address_exists?: InputMaybe<Scalars['Boolean']>;
    hydroshare_user_id_ne?: InputMaybe<Scalars['String']>;
    homepage_ne?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_gte?: InputMaybe<Scalars['String']>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationCreatorQueryInput>>;
    organization_lt?: InputMaybe<Scalars['String']>;
    name_ne?: InputMaybe<Scalars['String']>;
    creatorOrder_gt?: InputMaybe<Scalars['String']>;
    creatorOrder_lt?: InputMaybe<Scalars['String']>;
    phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    homepage_gte?: InputMaybe<Scalars['String']>;
    identifiers?: InputMaybe<Scalars['String']>;
    hydroshare_user_id_lt?: InputMaybe<Scalars['String']>;
    hydroshare_user_id?: InputMaybe<Scalars['String']>;
    identifiers_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    hydroshare_user_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    identifiers_gte?: InputMaybe<Scalars['String']>;
    email_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_ne?: InputMaybe<Scalars['String']>;
    email_lte?: InputMaybe<Scalars['String']>;
    creatorOrder?: InputMaybe<Scalars['String']>;
    name_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    organization_gt?: InputMaybe<Scalars['String']>;
    name_gt?: InputMaybe<Scalars['String']>;
    phone_lt?: InputMaybe<Scalars['String']>;
    creatorOrder_exists?: InputMaybe<Scalars['Boolean']>;
    homepage?: InputMaybe<Scalars['String']>;
    name_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    phone_gte?: InputMaybe<Scalars['String']>;
    name_exists?: InputMaybe<Scalars['Boolean']>;
    organization_lte?: InputMaybe<Scalars['String']>;
    phone_exists?: InputMaybe<Scalars['Boolean']>;
    hydroshare_user_id_gt?: InputMaybe<Scalars['String']>;
    identifiers_lte?: InputMaybe<Scalars['String']>;
    creatorOrder_lte?: InputMaybe<Scalars['String']>;
    address_gte?: InputMaybe<Scalars['String']>;
    email_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    name_lte?: InputMaybe<Scalars['String']>;
    phone_lte?: InputMaybe<Scalars['String']>;
    homepage_lt?: InputMaybe<Scalars['String']>;
    phone?: InputMaybe<Scalars['String']>;
    homepage_exists?: InputMaybe<Scalars['Boolean']>;
};

export type Geojson_Checksum_RelationSpatial_CoverageGeometryQueryInput = {
    type_ne?: InputMaybe<Scalars['String']>;
    type_gte?: InputMaybe<Scalars['String']>;
    type_lte?: InputMaybe<Scalars['String']>;
    AND?: InputMaybe<Array<Geojson_Checksum_RelationSpatial_CoverageGeometryQueryInput>>;
    OR?: InputMaybe<Array<Geojson_Checksum_RelationSpatial_CoverageGeometryQueryInput>>;
    type_in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type?: InputMaybe<Scalars['String']>;
    type_lt?: InputMaybe<Scalars['String']>;
    type_nin?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    type_exists?: InputMaybe<Scalars['Boolean']>;
    type_gt?: InputMaybe<Scalars['String']>;
};
